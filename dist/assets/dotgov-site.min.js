var BcSite =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/site/Site.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/focus-trap/index.js":
/*!******************************************!*\
  !*** ./node_modules/focus-trap/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var tabbable = __webpack_require__(/*! tabbable */ \"./node_modules/tabbable/index.js\");\n\nvar xtend = __webpack_require__(/*! xtend */ \"./node_modules/xtend/immutable.js\");\n\nvar activeFocusDelay;\n\nvar activeFocusTraps = function () {\n  var trapQueue = [];\n  return {\n    activateTrap: function activateTrap(trap) {\n      if (trapQueue.length > 0) {\n        var activeTrap = trapQueue[trapQueue.length - 1];\n\n        if (activeTrap !== trap) {\n          activeTrap.pause();\n        }\n      }\n\n      var trapIndex = trapQueue.indexOf(trap);\n\n      if (trapIndex === -1) {\n        trapQueue.push(trap);\n      } else {\n        // move this existing trap to the front of the queue\n        trapQueue.splice(trapIndex, 1);\n        trapQueue.push(trap);\n      }\n    },\n    deactivateTrap: function deactivateTrap(trap) {\n      var trapIndex = trapQueue.indexOf(trap);\n\n      if (trapIndex !== -1) {\n        trapQueue.splice(trapIndex, 1);\n      }\n\n      if (trapQueue.length > 0) {\n        trapQueue[trapQueue.length - 1].unpause();\n      }\n    }\n  };\n}();\n\nfunction focusTrap(element, userOptions) {\n  var doc = document;\n  var container = typeof element === 'string' ? doc.querySelector(element) : element;\n  var config = xtend({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true\n  }, userOptions);\n  var state = {\n    firstTabbableNode: null,\n    lastTabbableNode: null,\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false\n  };\n  var trap = {\n    activate: activate,\n    deactivate: deactivate,\n    pause: pause,\n    unpause: unpause\n  };\n  return trap;\n\n  function activate(activateOptions) {\n    if (state.active) return;\n    updateTabbableNodes();\n    state.active = true;\n    state.paused = false;\n    state.nodeFocusedBeforeActivation = doc.activeElement;\n    var onActivate = activateOptions && activateOptions.onActivate ? activateOptions.onActivate : config.onActivate;\n\n    if (onActivate) {\n      onActivate();\n    }\n\n    addListeners();\n    return trap;\n  }\n\n  function deactivate(deactivateOptions) {\n    if (!state.active) return;\n    clearTimeout(activeFocusDelay);\n    removeListeners();\n    state.active = false;\n    state.paused = false;\n    activeFocusTraps.deactivateTrap(trap);\n    var onDeactivate = deactivateOptions && deactivateOptions.onDeactivate !== undefined ? deactivateOptions.onDeactivate : config.onDeactivate;\n\n    if (onDeactivate) {\n      onDeactivate();\n    }\n\n    var returnFocus = deactivateOptions && deactivateOptions.returnFocus !== undefined ? deactivateOptions.returnFocus : config.returnFocusOnDeactivate;\n\n    if (returnFocus) {\n      delay(function () {\n        tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n      });\n    }\n\n    return trap;\n  }\n\n  function pause() {\n    if (state.paused || !state.active) return;\n    state.paused = true;\n    removeListeners();\n  }\n\n  function unpause() {\n    if (!state.paused || !state.active) return;\n    state.paused = false;\n    updateTabbableNodes();\n    addListeners();\n  }\n\n  function addListeners() {\n    if (!state.active) return; // There can be only one listening focus trap at a time\n\n    activeFocusTraps.activateTrap(trap); // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n\n    activeFocusDelay = delay(function () {\n      tryFocus(getInitialFocusNode());\n    });\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkKey, {\n      capture: true,\n      passive: false\n    });\n    return trap;\n  }\n\n  function removeListeners() {\n    if (!state.active) return;\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n    return trap;\n  }\n\n  function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    var node = optionValue;\n\n    if (!optionValue) {\n      return null;\n    }\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue);\n\n      if (!node) {\n        throw new Error('`' + optionName + '` refers to no known node');\n      }\n    }\n\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n\n      if (!node) {\n        throw new Error('`' + optionName + '` did not return a node');\n      }\n    }\n\n    return node;\n  }\n\n  function getInitialFocusNode() {\n    var node;\n\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (container.contains(doc.activeElement)) {\n      node = doc.activeElement;\n    } else {\n      node = state.firstTabbableNode || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error('Your focus-trap needs to have at least one focusable element');\n    }\n\n    return node;\n  }\n\n  function getReturnFocusNode(previousActiveElement) {\n    var node = getNodeForOption('setReturnFocus');\n    return node ? node : previousActiveElement;\n  } // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n\n\n  function checkPointerDown(e) {\n    if (container.contains(e.target)) return;\n\n    if (config.clickOutsideDeactivates) {\n      deactivate({\n        returnFocus: !tabbable.isFocusable(e.target)\n      });\n      return;\n    } // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n\n\n    if (config.allowOutsideClick && config.allowOutsideClick(e)) {\n      return;\n    }\n\n    e.preventDefault();\n  } // In case focus escapes the trap for some strange reason, pull it back in.\n\n\n  function checkFocusIn(e) {\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (container.contains(e.target) || e.target instanceof Document) {\n      return;\n    }\n\n    e.stopImmediatePropagation();\n    tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n  }\n\n  function checkKey(e) {\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      e.preventDefault();\n      deactivate();\n      return;\n    }\n\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  } // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n\n\n  function checkTab(e) {\n    updateTabbableNodes();\n\n    if (e.shiftKey && e.target === state.firstTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.lastTabbableNode);\n      return;\n    }\n\n    if (!e.shiftKey && e.target === state.lastTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.firstTabbableNode);\n      return;\n    }\n  }\n\n  function checkClick(e) {\n    if (config.clickOutsideDeactivates) return;\n    if (container.contains(e.target)) return;\n\n    if (config.allowOutsideClick && config.allowOutsideClick(e)) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function updateTabbableNodes() {\n    var tabbableNodes = tabbable(container);\n    state.firstTabbableNode = tabbableNodes[0] || getInitialFocusNode();\n    state.lastTabbableNode = tabbableNodes[tabbableNodes.length - 1] || getInitialFocusNode();\n  }\n\n  function tryFocus(node) {\n    if (node === doc.activeElement) return;\n\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus();\n    state.mostRecentlyFocusedNode = node;\n\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  }\n}\n\nfunction isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n}\n\nfunction isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n}\n\nfunction isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n}\n\nfunction delay(fn) {\n  return setTimeout(fn, 0);\n}\n\nmodule.exports = focusTrap;\n\n//# sourceURL=webpack://Bc%5Bname%5D/./node_modules/focus-trap/index.js?");

/***/ }),

/***/ "./node_modules/tabbable/index.js":
/*!****************************************!*\
  !*** ./node_modules/tabbable/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var candidateSelectors = ['input', 'select', 'textarea', 'a[href]', 'button', '[tabindex]', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable=\"false\"])'];\nvar candidateSelector = candidateSelectors.join(',');\nvar matches = typeof Element === 'undefined' ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\nfunction tabbable(el, options) {\n  options = options || {};\n  var regularTabbables = [];\n  var orderedTabbables = [];\n  var candidates = el.querySelectorAll(candidateSelector);\n\n  if (options.includeContainer) {\n    if (matches.call(el, candidateSelector)) {\n      candidates = Array.prototype.slice.apply(candidates);\n      candidates.unshift(el);\n    }\n  }\n\n  var i, candidate, candidateTabindex;\n\n  for (i = 0; i < candidates.length; i++) {\n    candidate = candidates[i];\n    if (!isNodeMatchingSelectorTabbable(candidate)) continue;\n    candidateTabindex = getTabindex(candidate);\n\n    if (candidateTabindex === 0) {\n      regularTabbables.push(candidate);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        node: candidate\n      });\n    }\n  }\n\n  var tabbableNodes = orderedTabbables.sort(sortOrderedTabbables).map(function (a) {\n    return a.node;\n  }).concat(regularTabbables);\n  return tabbableNodes;\n}\n\ntabbable.isTabbable = isTabbable;\ntabbable.isFocusable = isFocusable;\n\nfunction isNodeMatchingSelectorTabbable(node) {\n  if (!isNodeMatchingSelectorFocusable(node) || isNonTabbableRadio(node) || getTabindex(node) < 0) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction isTabbable(node) {\n  if (!node) throw new Error('No node provided');\n  if (matches.call(node, candidateSelector) === false) return false;\n  return isNodeMatchingSelectorTabbable(node);\n}\n\nfunction isNodeMatchingSelectorFocusable(node) {\n  if (node.disabled || isHiddenInput(node) || isHidden(node)) {\n    return false;\n  }\n\n  return true;\n}\n\nvar focusableCandidateSelector = candidateSelectors.concat('iframe').join(',');\n\nfunction isFocusable(node) {\n  if (!node) throw new Error('No node provided');\n  if (matches.call(node, focusableCandidateSelector) === false) return false;\n  return isNodeMatchingSelectorFocusable(node);\n}\n\nfunction getTabindex(node) {\n  var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);\n  if (!isNaN(tabindexAttr)) return tabindexAttr; // Browsers do not return `tabIndex` correctly for contentEditable nodes;\n  // so if they don't have a tabindex attribute specifically set, assume it's 0.\n\n  if (isContentEditable(node)) return 0;\n  return node.tabIndex;\n}\n\nfunction sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n}\n\nfunction isContentEditable(node) {\n  return node.contentEditable === 'true';\n}\n\nfunction isInput(node) {\n  return node.tagName === 'INPUT';\n}\n\nfunction isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n}\n\nfunction isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n}\n\nfunction isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n}\n\nfunction getCheckedRadio(nodes) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked) {\n      return nodes[i];\n    }\n  }\n}\n\nfunction isTabbableRadio(node) {\n  if (!node.name) return true; // This won't account for the edge case where you have radio groups with the same\n  // in separate forms on the same page.\n\n  var radioSet = node.ownerDocument.querySelectorAll('input[type=\"radio\"][name=\"' + node.name + '\"]');\n  var checked = getCheckedRadio(radioSet);\n  return !checked || checked === node;\n}\n\nfunction isHidden(node) {\n  // offsetParent being null will allow detecting cases where an element is invisible or inside an invisible element,\n  // as long as the element does not use position: fixed. For them, their visibility has to be checked directly as well.\n  return node.offsetParent === null || getComputedStyle(node).visibility === 'hidden';\n}\n\nmodule.exports = tabbable;\n\n//# sourceURL=webpack://Bc%5Bname%5D/./node_modules/tabbable/index.js?");

/***/ }),

/***/ "./node_modules/xtend/immutable.js":
/*!*****************************************!*\
  !*** ./node_modules/xtend/immutable.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = extend;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n  var target = {};\n\n  for (var i = 0; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}\n\n//# sourceURL=webpack://Bc%5Bname%5D/./node_modules/xtend/immutable.js?");

/***/ }),

/***/ "./src/components/Accordion.js":
/*!*************************************!*\
  !*** ./src/components/Accordion.js ***!
  \*************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _polyfills_includes_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../polyfills/includes.polyfill */ \"./src/polyfills/includes.polyfill.js\");\n/* harmony import */ var _polyfills_includes_polyfill__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_polyfills_includes_polyfill__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _polyfills_closest_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../polyfills/closest.polyfill */ \"./src/polyfills/closest.polyfill.js\");\n/* harmony import */ var _polyfills_closest_polyfill__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_polyfills_closest_polyfill__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _polyfills_nodelist_foreach_polyfill__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../polyfills/nodelist-foreach.polyfill */ \"./src/polyfills/nodelist-foreach.polyfill.js\");\n/* harmony import */ var _polyfills_nodelist_foreach_polyfill__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_polyfills_nodelist_foreach_polyfill__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _utilities_constants_utilities__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utilities/constants.utilities */ \"./src/utilities/constants.utilities.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\nvar cssClasses = {\n  accordionButton: \"dg_accordion-btn\",\n  collapseComponent: \"dg_collapse\"\n};\nvar menuOpen = \"collapse show\";\nvar buttonOpenAll = \"Open All\";\nvar buttonCloseAll = \"Close All\";\ndocument.addEventListener(\"click\", function (onDocumentClick) {\n  var target = onDocumentClick.target;\n  var targetClassList = target.classList;\n  var isAccordionButtonClick = targetClassList.contains(cssClasses.accordionButton) || targetClassList.contains(\"dg_accordion_buttontext-holder\");\n\n  if (targetClassList.contains(\"dg_allitems\")) {\n    allMenuItemsAction(target);\n  } else if (isAccordionButtonClick) {\n    toggleAccordionPanel(target);\n  } else {\n    return;\n  }\n}, false);\n\nvar onMediumWindowSizeChangeCollapse = function onMediumWindowSizeChangeCollapse(onDocumentResize) {\n  var isAccordionCollapse = document.getElementsByClassName(\"dg_collapse dg_accordion__collapsible\");\n\n  if (isAccordionCollapse) {\n    if (window.outerWidth < 769) {\n      for (var i = 0; i < isAccordionCollapse.length; i++) {\n        isAccordionCollapse[i].classList.add(\"collapsed\");\n        var collapseButton = isAccordionCollapse[i].getElementsByClassName(\"multi-collapse collapse show\");\n        collapseButton[0] ? collapseButton[0].classList.remove(\"show\") : null;\n      }\n    }\n  }\n};\n\nwindow.addEventListener(\"resize\", function (onDocumentResize) {\n  onMediumWindowSizeChangeCollapse();\n});\nwindow.addEventListener(\"DOMContentLoaded\", function (onDocumentResize) {\n  onMediumWindowSizeChangeCollapse();\n});\n/**\r\n * Handler for all document focus events\r\n * @param {*} focusEvent\r\n */\n\nvar onDocumentFocus = function onDocumentFocus(focusEvent) {\n  var target = focusEvent.target;\n  var isAccordionButtonElm = target.classList.contains(cssClasses.accordionButton);\n\n  if (isAccordionButtonElm) {\n    toggleAccordionFocus(focusEvent);\n  }\n};\n/**\r\n * Do stuff after the dom has loaded\r\n */\n\n\nvar onDocumentReady = function onDocumentReady() {\n  var expandedAccordionToggleButtonElms = document.querySelectorAll(\":not(#root) .\".concat(cssClasses.accordionButton, \"[aria-expanded=\\\"true\\\"]\"));\n\n  if (expandedAccordionToggleButtonElms && expandedAccordionToggleButtonElms.length > 0) {\n    var nonReactAccordionElms = _toConsumableArray(expandedAccordionToggleButtonElms).filter(function (x) {\n      return !x.closest(\"#root\");\n    });\n\n    nonReactAccordionElms.forEach(function (toggleButtonElm) {\n      toggleAccordionPanel(toggleButtonElm, true);\n    });\n  }\n};\n\nvar ua = window.navigator.userAgent;\nvar isIE = /MSIE|Trident|Edge\\//.test(ua);\n\nif (isIE) {\n  document.addEventListener(\"focusin\", onDocumentFocus, false);\n  document.addEventListener(\"focusout\", onDocumentFocus, false);\n}\n/**\r\n * Toggles class that enables proper focus\r\n * This is a workaround for the IE and Edge Browsers that do not support :focus-within\r\n * @param {*} focusEvent\r\n */\n\n\nvar toggleAccordionFocus = function toggleAccordionFocus(focusEvent) {\n  var target = focusEvent.target,\n      focusType = focusEvent.type;\n  var accordionHeaderElms = target.getElementsByClassName(\"dg_accordion_buttontext-holder\");\n\n  if (focusType === \"focusin\") {\n    accordionHeaderElms[0].classList.add(\"ms-focus-within\");\n  }\n\n  if (focusType === \"focusout\") {\n    accordionHeaderElms[0].classList.remove(\"ms-focus-within\");\n  }\n};\n\nvar selectElementByClassName = function selectElementByClassName(element, cssNameText) {\n  var sibling = element.nextElementSibling;\n\n  while (sibling) {\n    if (sibling.matches(cssNameText)) {\n      return sibling;\n    } else {\n      sibling = sibling.nextElementSibling;\n    }\n  }\n};\n/**\r\n * Toggles an accordion panel for a given element.\r\n * This toggles handle hiding / showing the content as well as handling any\r\n * accessability and visual stuff that needs to happen to the corresponding accordion elements.\r\n * @param {HTMLElement} accordionHeaderElm\r\n */\n\n\nvar toggleAccordionPanel = function toggleAccordionPanel(accordionHeaderElm, shouldForceOpen) {\n  var mainDivElm = accordionHeaderElm.closest(\".dg_accordion\") || accordionHeaderElm.closest(\".\".concat(cssClasses.collapseComponent));\n  var menuItems = mainDivElm.getElementsByClassName(\"multi-collapse\");\n  var totalCollapsedPanels = mainDivElm.getElementsByClassName(\"show\");\n  var accordionButtonElm = accordionHeaderElm.closest(\"button\");\n  var accordionContentElm = selectElementByClassName(accordionButtonElm, \".multi-collapse\");\n  var accordionButtonAllElms = mainDivElm.getElementsByClassName(\"dg_allitems\");\n  var isAccordionExpanded = accordionContentElm.className.includes(menuOpen);\n  var shouldOpenPanel = shouldForceOpen || !isAccordionExpanded; // Toggle the accordion's button aria-expanded attribute\n\n  accordionButtonElm.setAttribute(_utilities_constants_utilities__WEBPACK_IMPORTED_MODULE_3__[\"HtmlAttributes\"].ariaExpanded, shouldOpenPanel); //If its open then we want to close it and vice versa\n\n  collapsePanelUpdate(shouldOpenPanel, accordionContentElm);\n  accordionButtonAllElms.length > 0 ? updateButtonStatus(accordionButtonAllElms[0], menuItems.length, totalCollapsedPanels.length) : null;\n};\n\nvar allMenuItemsAction = function allMenuItemsAction(button) {\n  var isMenuOpen = button.textContent.toLowerCase().trim() === \"open all\" ? true : false;\n  var bodyElm = button.closest(\".dg_accordion\");\n  var menuItems = bodyElm.getElementsByClassName(\"multi-collapse\");\n  var totalCollapsedPanels = bodyElm.getElementsByClassName(\"show\");\n\n  for (var i = 0; i < menuItems.length; i++) {\n    var menuItem = menuItems[i];\n    collapsePanelUpdate(isMenuOpen, menuItem);\n  }\n\n  updateButtonStatus(button, menuItems.length, totalCollapsedPanels.length);\n};\n/**\r\n * Expands or collapse a content panel for a given accordion panel content element\r\n * @param {boolean} shouldOpenPanel flag to determine if the accordion content should be expand or collapse\r\n * @param {HTMLElement} accordionPanelContentElm accordion panel to expand / collapse\r\n */\n\n\nvar collapsePanelUpdate = function collapsePanelUpdate(shouldOpenPanel, accordionPanelContentElm) {\n  accordionPanelContentElm.className = menuState(shouldOpenPanel ? \"open\" : \"close\");\n  accordionPanelContentElm.setAttribute(_utilities_constants_utilities__WEBPACK_IMPORTED_MODULE_3__[\"HtmlAttributes\"].ariaExpanded, shouldOpenPanel);\n  var accordionElm = accordionPanelContentElm.closest(\".dg_accordion__collapsible\");\n  accordionElm.classList[shouldOpenPanel ? \"remove\" : \"add\"](\"collapsed\");\n};\n\nvar menuState = function menuState(state) {\n  return \"multi-collapse collapse \".concat(state.toLowerCase() === \"open\" ? \"show\" : \"\").trim();\n};\n\nvar updateButtonStatus = function updateButtonStatus(button, totalCollapsiblePanels, totalCollapsedPanels) {\n  totalCollapsiblePanels === totalCollapsedPanels ? button.textContent = buttonCloseAll : button.textContent = buttonOpenAll;\n};\n/** Handler when the DOM is fully loaded */\n\n\ndocument.addEventListener(\"DOMContentLoaded\", onDocumentReady);\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/components/Accordion.js?");

/***/ }),

/***/ "./src/components/AddImageAltText.js":
/*!*******************************************!*\
  !*** ./src/components/AddImageAltText.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("window.addEventListener(\"DOMContentLoaded\", function ($) {\n  var headerElement = document.getElementsByClassName(\"dg_page-header__title\");\n\n  if (headerElement[0]) {\n    var headerTitle = headerElement[0].innerHTML;\n    var parkHeaderImage = $(\"#parkHeaderImage\");\n    var parkHeaderImageSmall = $(\"#parkHeaderImageSmall\");\n    var parkImage = $(\"#parkImage\");\n    parkHeaderImage.prop(\"alt\", headerTitle);\n    parkHeaderImageSmall.prop(\"alt\", headerTitle);\n    parkImage.prop(\"alt\", headerTitle);\n  }\n}(jQuery));\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/components/AddImageAltText.js?");

/***/ }),

/***/ "./src/components/AltList.js":
/*!***********************************!*\
  !*** ./src/components/AltList.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("//********************************************************************************************************************************\n//This script changes the related links alt list items css if the current url matches the href of a list item.\n//********************************************************************************************************************************\nvar findCurrentRelatedLink = function findCurrentRelatedLink() {\n  var list = document.getElementsByClassName(\"dg_sidebar-alt-list\");\n  var url = window.location.href;\n  url = url.replace(\"https://baltimorecountymd.gov/\", \"https://www.baltimorecountymd.gov/\");\n  var index = url.indexOf(\"?\"); //We use google translate which adds a google extension at the end of the url if in a different language. This makes sure that the correct\n  //alt list item is still highlighted if google is translating and also ensures the footer is updated as well.\n\n  var urlTranslate = url.substring(index);\n  var urlNoTranslate = url.replace(urlTranslate, \"\");\n  var urlNoHost = url.substring(host);\n  Array.prototype.forEach.call(list, function (item) {\n    var listItem = item.getElementsByTagName(\"a\");\n    Array.prototype.forEach.call(listItem, function (x) {\n      if (x.href === urlNoTranslate || x.href === url) {\n        x.parentNode.className = \"dg_sidebar-alt-list-current\";\n      }\n    });\n  });\n};\n\nwindow.addEventListener(\"load\", findCurrentRelatedLink);\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/components/AltList.js?");

/***/ }),

/***/ "./src/components/EventFilter.js":
/*!***************************************!*\
  !*** ./src/components/EventFilter.js ***!
  \***************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utilities_dom_utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utilities/dom.utilities */ \"./src/utilities/dom.utilities.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\nvar cssClasses = {\n  filterCollapse: \"dg_filter-collapse\",\n  filterCollapseToggleButton: \"dg_filter-collapse__toggle-btn\"\n};\n\nvar toggleFilterElms = function toggleFilterElms(filterCollapseElms, shouldShow) {\n  if (filterCollapseElms && filterCollapseElms.length > 0) {\n    _toConsumableArray(filterCollapseElms).forEach(function (elm) {\n      var _elm$dataset$itemsToS = elm.dataset.itemsToShow,\n          itemsToShow = _elm$dataset$itemsToS === void 0 ? \"5\" : _elm$dataset$itemsToS;\n      var childElms = elm.children;\n\n      _toConsumableArray(childElms).forEach(function (childElm, index) {\n        if (index > parseInt(itemsToShow) - 1) {\n          childElm.style.display = shouldShow ? \"inherit\" : \"none\";\n        }\n      });\n    });\n  }\n};\n\nvar onDocumentReady = function onDocumentReady() {\n  // Find any filters to collapse\n  var filterCollapseElms = document.getElementsByClassName(cssClasses.filterCollapse);\n  toggleFilterElms(filterCollapseElms, false);\n};\n\nvar handleFilterCollapseToggle = function handleFilterCollapseToggle(targetElm) {\n  var shouldShowMore = /.*more.*/i.test(targetElm.textContent);\n  targetElm.textContent = \"Show \".concat(shouldShowMore ? \"Less\" : \"More\");\n  var filterCollapseElms = Object(_utilities_dom_utilities__WEBPACK_IMPORTED_MODULE_0__[\"GetFirstElementOrDefault\"])(targetElm.parentElement, \".\".concat(cssClasses.filterCollapse));\n  toggleFilterElms([filterCollapseElms], shouldShowMore);\n};\n\nvar handleDocumentClick = function handleDocumentClick(onDocumentClick) {\n  var target = onDocumentClick.target;\n  var targetClassList = target.classList;\n  var isToggleClick = targetClassList.contains(cssClasses.filterCollapseToggleButton);\n\n  if (isToggleClick) {\n    handleFilterCollapseToggle(target);\n  } else {\n    return;\n  }\n};\n/** Handler when the DOM is fully loaded */\n\n\ndocument.addEventListener(\"DOMContentLoaded\", onDocumentReady);\ndocument.addEventListener(\"click\", handleDocumentClick, false);\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/components/EventFilter.js?");

/***/ }),

/***/ "./src/components/Modal.js":
/*!*********************************!*\
  !*** ./src/components/Modal.js ***!
  \*********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _polyfills_closest_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../polyfills/closest.polyfill */ \"./src/polyfills/closest.polyfill.js\");\n/* harmony import */ var _polyfills_closest_polyfill__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_polyfills_closest_polyfill__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _w3_dialog__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./w3-dialog */ \"./src/components/w3-dialog.js\");\n/* harmony import */ var _utilities_dom_utilities__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utilities/dom.utilities */ \"./src/utilities/dom.utilities.js\");\n\n\n\nvar cssClasses = {\n  active: \"active\",\n  modalCloseButton: \"dg_modal__close-button\",\n  modalOpenButton: \"dg_modal__open-button\",\n  modalOverlay: \"dialog-backdrop\",\n\n  /** overlay is transparent gray section around the modal */\n  canCloseOnOverlayClick: \"can-dismiss\"\n};\nvar selectors = {\n  activeDismissibleModal: \".dg_modal[data-dismissible]\"\n};\n/**\r\n * Hide the main site navigation button by reducing its z-index value when opening the\r\n * modal so the button doesn't appear on top of it.\r\n */\n\nvar hideNavButton = function hideNavButton() {\n  var windowWidth = $(window).width();\n  var fakeSiteButton = document.getElementById(\"bc_site-nav__toggle-button\");\n\n  if (fakeSiteButton) {\n    if (windowWidth <= 900) {\n      fakeSiteButton.style.zIndex = \"0\";\n    } else {\n      fakeSiteButton.style.zIndex = \"2147483647\";\n    }\n  }\n};\n/**\r\n * Restore the main site navigation button to its original z-index so it reappears when\r\n * the modal is closed.\r\n */\n\n\nvar showNavButton = function showNavButton() {\n  var fakeSiteButton = document.getElementById(\"bc_site-nav__toggle-button\");\n\n  if (fakeSiteButton) {\n    fakeSiteButton.style.zIndex = \"2147483647\";\n  }\n};\n/**\r\n * Handle the modal overlay click.\r\n * The modal markup will determine whether or not the modal can close on overlay click\r\n * based on whether it has the data-dismissible data attribute.\r\n * @param {element:click} clickEvent - the observable overlay click event\r\n * @listens element:click\r\n */\n\n\nvar handleActiveOverlayClick = function handleActiveOverlayClick(clickEvent) {\n  var activeDismissibleModalElm = Object(_utilities_dom_utilities__WEBPACK_IMPORTED_MODULE_2__[\"GetFirstElementOrDefault\"])(document, selectors.activeDismissibleModal);\n  var isDismissible = activeDismissibleModalElm && activeDismissibleModalElm.getAttribute(\"data-dismissible\") !== \"false\";\n\n  if (isDismissible) {\n    /** The  w3 logic we used requires the close button to be passed into the closeDialog function */\n    var closeButton = Object(_utilities_dom_utilities__WEBPACK_IMPORTED_MODULE_2__[\"GetFirstElementOrDefault\"])(activeDismissibleModalElm, \".\".concat(cssClasses.modalCloseButton));\n    showNavButton();\n    window.closeDialog(closeButton);\n  }\n};\n/**\r\n * Captures all dom click events in order to bind all event with a particular class\r\n * @param {document:click} clickEvent - the observable click event\r\n * @listens document:click\r\n */\n\n\nvar handleDocumentClick = function handleDocumentClick(clickEvent) {\n  var targetClassList = clickEvent.target.classList; // If the clicked element doesn't have the right selector, bail\n\n  var isModalOpenButtonClick = targetClassList.contains(cssClasses.modalOpenButton);\n  var isModalCloseButtonClick = targetClassList.contains(cssClasses.modalCloseButton) || !!clickEvent.target.closest(\".\".concat(cssClasses.modalCloseButton));\n  var isOverlayClick = targetClassList.contains(cssClasses.modalOverlay) && targetClassList.contains(cssClasses.active);\n\n  if (isModalOpenButtonClick) {\n    handleModalOpenButtonClick(clickEvent);\n  } else if (isModalCloseButtonClick) {\n    handleModalCloseButtonClick(clickEvent);\n  } else if (isOverlayClick) {\n    handleActiveOverlayClick(clickEvent);\n  } else {\n    return;\n  }\n};\n/**\r\n * Closes the closest modal\r\n * @param {*} clickEvent\r\n */\n\n\nvar handleModalCloseButtonClick = function handleModalCloseButtonClick(clickEvent) {\n  showNavButton();\n  window.closeDialog(clickEvent.target);\n\n  if (isIos()) {\n    scrollWithinPage();\n  }\n};\n/**\r\n * Opens the modal that matches it's id to data-target attribute of the open button\r\n * @param {*} clickEvent\r\n */\n\n\nvar handleModalOpenButtonClick = function handleModalOpenButtonClick(clickEvent) {\n  var modalButtonElm = clickEvent.target;\n  var targetModalId = modalButtonElm.getAttribute(\"data-target\");\n  window.openDialog(targetModalId, modalButtonElm);\n  hideNavButton();\n\n  if (isIos()) {\n    handleIosWindowResize();\n    scrollWithinModal();\n  }\n};\n\nfunction isIos() {\n  return (/iPad|iPhone|iPod/.test(navigator.platform) || navigator.platform === \"MacIntel\" && navigator.maxTouchPoints > 1) && !window.MSStream;\n}\n\nfunction handleIosWindowResize() {\n  var backdrop = document.getElementsByClassName(\"dialog-backdrop\")[0]; //Update top of modal to current scroll location in order to match display height\n\n  backdrop.style.top = $(window).scrollTop() + \"px\";\n  $(window).resize(function () {\n    //Update top of modal again on window resize i.e. the lower Safari menu appearing\n    backdrop.style.top = $(window).scrollTop() + \"px\";\n  });\n}\n\nfunction scrollWithinModal() {\n  //Remove existing event listeners https://stackoverflow.com/a/34245613\n  var button = document.querySelector(\"#dg_back-to-top\");\n  button.parentNode.replaceChild(button.cloneNode(1), button);\n  $(\"#dg_back-to-top\").on(\"click\", function (e) {\n    e.preventDefault(); //Scroll to the top of the dialog instead of the page to prevent scrolling past the dialog\n\n    $(\".dialog-backdrop\").animate({\n      scrollTop: 0\n    }, 700);\n  });\n}\n\nfunction scrollWithinPage() {\n  //Remove existing event listeners https://stackoverflow.com/a/34245613\n  var button = document.querySelector(\"#dg_back-to-top\");\n  button.parentNode.replaceChild(button.cloneNode(1), button);\n  $(\"#dg_back-to-top\").on(\"click\", function (e) {\n    e.preventDefault(); //Put the original behavior of \"scrolling to the top of the page\" back\n\n    $(\"html,body\").animate({\n      scrollTop: 0\n    }, 700);\n  });\n}\n\ndocument.addEventListener(\"click\", handleDocumentClick, false);\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/components/Modal.js?");

/***/ }),

/***/ "./src/components/ScrollToTop.js":
/*!***************************************!*\
  !*** ./src/components/ScrollToTop.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("//*******************************/\n//This needs to be addd directly onto a SE template in order for the race condition to be avoided\n//<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js\"></script>\n//That script needs to be added as well for jquery to work.\n//*******************************/\n(function ($) {\n  if ($(\"#dg_back-to-top\").length) {\n    var scrollTrigger = 200,\n        // px\n    backToTop = function backToTop() {\n      var scrollTop = $(window).scrollTop();\n\n      if (scrollTop > scrollTrigger) {\n        $(\"#dg_back-to-top\").addClass(\"show\");\n      } else {\n        $(\"#dg_back-to-top\").removeClass(\"show\");\n      }\n    };\n\n    backToTop();\n    $(window).on(\"scroll\", function () {\n      backToTop();\n    });\n    $(\"#dg_back-to-top\").on(\"click\", function (e) {\n      e.preventDefault();\n      $(\"html,body\").animate({\n        scrollTop: 0\n      }, 700);\n    });\n  }\n})(jQuery);\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/components/ScrollToTop.js?");

/***/ }),

/***/ "./src/components/StepList.js":
/*!************************************!*\
  !*** ./src/components/StepList.js ***!
  \************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _polyfills_array_from_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../polyfills/array-from.polyfill */ \"./src/polyfills/array-from.polyfill.js\");\n/* harmony import */ var _polyfills_array_from_polyfill__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_polyfills_array_from_polyfill__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _polyfills_closest_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../polyfills/closest.polyfill */ \"./src/polyfills/closest.polyfill.js\");\n/* harmony import */ var _polyfills_closest_polyfill__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_polyfills_closest_polyfill__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _polyfills_nodelist_foreach_polyfill__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../polyfills/nodelist-foreach.polyfill */ \"./src/polyfills/nodelist-foreach.polyfill.js\");\n/* harmony import */ var _polyfills_nodelist_foreach_polyfill__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_polyfills_nodelist_foreach_polyfill__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _utilities_dom_utilities__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utilities/dom.utilities */ \"./src/utilities/dom.utilities.js\");\n\n\n\n\nvar states = {\n  collapsed: \"collapsed\",\n  hide: \"Hide\",\n  hideAll: \"Hide All\",\n  show: \"Show\",\n  showAll: \"Show All\",\n  \"static\": \"static\"\n};\nvar cssClasses = {\n  collapsed: \"collapsed\",\n  hovered: \"is-hovered\",\n  stepList: \"dg_step-list\",\n  stepListSection: \"dg_step-list__list-section\",\n  detailsToggleButton: \"dg_step-list__toggle-btn\",\n  details: \"dg_step-list__details\",\n  showAllStepsButton: \"dg_step-list__show-all-btn\",\n  toggleButtonHeading: \"dg_step-list__toggle-btn__title\",\n  toggleButtonText: \"dg_step-list__toggle-btn__btn-text\",\n  section: \"dg_step-list__list-section\"\n};\n/**\r\n * Add hover events for each list item for a given step list\r\n * @param {*} stepListElm\r\n */\n\nvar addStepListHoverEvents = function addStepListHoverEvents(stepListElm) {\n  var stepListItemElms = stepListElm.querySelectorAll(\".\".concat(cssClasses.section));\n  /** Add hover events for individual step list items, to make styling the step circles easier. */\n\n  stepListItemElms.forEach(function (stepListItemElm) {\n    var itemButtonElm = Object(_utilities_dom_utilities__WEBPACK_IMPORTED_MODULE_3__[\"GetFirstElementOrDefault\"])(stepListItemElm, \".\".concat(cssClasses.detailsToggleButton));\n    itemButtonElm.addEventListener(\"mouseenter\", function (mouseenterEvent) {\n      toggleItemHoverStatus(mouseenterEvent, true);\n    });\n    itemButtonElm.addEventListener(\"mouseleave\", function (mouseleaveEvent) {\n      toggleItemHoverStatus(mouseleaveEvent, false);\n    });\n  });\n};\n/**\r\n * Display or Hide Details for a given section of the step list based on the button state (show/hide)\r\n * @param {HTMLElement} detailsSectionElm\r\n * @return {void}\r\n */\n\n\nvar displaySectionDetails = function displaySectionDetails(detailsSectionElm, buttonState) {\n  detailsSectionElm.style.display = isButtonStateShow(buttonState) ? \"block\" : \"none\";\n};\n/**\r\n *\r\n * @param {string} buttonText  buttonElm.textContent, will be \"Show\" or \"Hide\"\r\n * @returns {string} \"Show\" if the button text is equal to \"Hide\" or vice-versa\r\n */\n\n\nvar getOppositeDetailsToggleButtonState = function getOppositeDetailsToggleButtonState(buttonText) {\n  return isButtonStateShow(buttonText) ? states.hide : \"\".concat(states.show, \" More\");\n};\n/**\r\n * Determine if a step list has at least one section open\r\n * @param {HTMLElement} stepListElm\r\n * @returns {boolean} true if the given step list has at least one section open\r\n */\n\n\nvar hasAtLeastOneDetailSectionVisible = function hasAtLeastOneDetailSectionVisible(stepListElm) {\n  return Array.from(stepListElm.querySelectorAll(\".\".concat(cssClasses.detailsToggleButton))).filter(function (elm) {\n    return elm.textContent.toLowerCase().indexOf(states.show.toLowerCase()) > -1;\n  }).length > 0;\n};\n/**\r\n * Handle \"Show All\" Button Click based on a Step List\r\n * @param {Object} clickEvent\r\n * @return {void}\r\n */\n\n\nvar handleAllStepButtonClick = function handleAllStepButtonClick(clickEvent) {\n  var buttonElm = clickEvent.target;\n  var sectionElm = buttonElm.closest(\".\".concat(cssClasses.stepList));\n  var buttonState = buttonElm.textContent;\n  updateSections(sectionElm, getOppositeDetailsToggleButtonState(buttonState));\n  toggleAllButtonText(buttonElm, buttonState);\n};\n/**\r\n * Handle the details button toggle click for a given step list section detail button\r\n * @param {object} clickEvent\r\n */\n\n\nvar handleDetailsToggleButtonClick = function handleDetailsToggleButtonClick(clickEvent) {\n  var target = clickEvent.target;\n  var buttonElm = target.classList.contains(cssClasses.detailsToggleButton) ? target : target.parentElement;\n\n  if (buttonElm.tagName.toLowerCase() === \"button\") {\n    var buttonState = buttonElm.textContent;\n    var detailElms = buttonElm.closest(\".\".concat(cssClasses.section)).querySelectorAll(\".\".concat(cssClasses.details));\n    Array.from(detailElms).forEach(function (detailElm) {\n      displaySectionDetails(detailElm, buttonState);\n    });\n    setAriaExpanded(buttonElm, isButtonStateShow(buttonState));\n    toggleDetailButtonText(buttonElm, buttonState);\n    updateToggleAllButton(detailElms);\n  }\n};\n\nvar handleDocumentClick = function handleDocumentClick(clickEvent) {\n  var _clickEvent = clickEvent,\n      target = _clickEvent.target; // If the clicked element doesn't have the right selector, bail\n\n  var isDetailsToggleClick = target.parentElement.classList.contains(cssClasses.detailsToggleButton) || target.classList.contains(cssClasses.detailsToggleButton);\n  var isDetailsSectionClick = target.classList.contains(cssClasses.stepListSection);\n\n  if (!isDetailsToggleClick && isDetailsSectionClick) {\n    clickEvent = {\n      target: target.querySelectorAll(\".\".concat(cssClasses.detailsToggleButton))[0]\n    };\n  }\n\n  if (isDetailsToggleClick || isDetailsSectionClick) {\n    handleDetailsToggleButtonClick(clickEvent);\n  } else if (target.classList.contains(cssClasses.showAllStepsButton)) {\n    handleAllStepButtonClick(clickEvent);\n  } else {\n    return;\n  }\n};\n/**\r\n * Determine if the given button text is equal to \"Show\" (case insensitive)\r\n * @param {string} buttonText buttonElm.textContent, will be \"Show\" or \"Hide\"\r\n * @returns {boolean} true if the button text is \"Show\" (case insensitive)\r\n */\n\n\nvar isButtonStateShow = function isButtonStateShow(buttonText) {\n  return buttonText.toLowerCase().indexOf(states.show.toLowerCase()) > -1;\n};\n/**\r\n * Determine if the show all button's active text is \"Hide All\"\r\n * @param {HTMLElement} showAllButtonElm\r\n * @returns {boolean} true if the show all button's text is set to \"hide all\"\r\n */\n\n\nvar isHideAllVisible = function isHideAllVisible(showAllButtonElm) {\n  return showAllButtonElm && showAllButtonElm.textContent.toLowerCase() === states.hideAll.toLowerCase();\n};\n/**\r\n * Helper to set an elements text\r\n * @param {*} elm\r\n * @param {string} text desired text for element\r\n */\n\n\nvar setElementText = function setElementText(elm, text) {\n  elm.textContent = text;\n};\n/**\r\n * Set aria expanded based on isExpanded flag\r\n * @param {HTMLElement} elm\r\n * @param {boolean} isExpanded\r\n */\n\n\nvar setAriaExpanded = function setAriaExpanded(elm, isExpanded) {\n  elm.setAttribute(\"aria-expanded\", isExpanded);\n};\n/**\r\n * Toggles all toggle button text for a given button state\r\n * @param {HTMLElement} buttonElm\r\n * @param {string} buttonState representation of the button state as a string\r\n * @return {void} if button state is \"Show All\" then the button text will be \"Hide All\" or vice-versa\r\n */\n\n\nvar toggleAllButtonText = function toggleAllButtonText(buttonElm, buttonState) {\n  setElementText(buttonElm, isButtonStateShow(buttonState) ? states.hideAll : states.showAll);\n};\n/**\r\n * Toggles detail toggle button text for a given button state\r\n * @param {HTMLElement} buttonElm\r\n * @param {string} buttonState representation of the button state as a string\r\n * @return {void} if button state is \"Show\" then the button text will be \"Hide\" or vice-versa\r\n */\n\n\nvar toggleDetailButtonText = function toggleDetailButtonText(buttonElm, buttonState) {\n  var buttonTextElm = buttonElm.querySelectorAll(\".\".concat(cssClasses.toggleButtonText));\n  var elmToUpdate = buttonTextElm ? buttonTextElm[0] : null;\n\n  if (!elmToUpdate) {\n    console.error(\"Something is wrong with your markup, please verify your step is setup properly\");\n    return;\n  }\n\n  setElementText(elmToUpdate, isButtonStateShow(buttonState) ? states.hide : \"\".concat(states.show, \" More\"));\n};\n/**\r\n * Adds or removed the hovered class to a step list item based on the isHovered param\r\n * @param {*} elm\r\n * @param {boolean} isHovered whether or not the given element is being hovered\r\n */\n\n\nvar toggleItemHoverStatus = function toggleItemHoverStatus(event, isHovered) {\n  var detailsButtonElm = event.target.closest(\".\".concat(cssClasses.section));\n  detailsButtonElm.classList[isHovered ? \"add\" : \"remove\"](cssClasses.hovered);\n};\n/**\r\n * Adjust the details section for a given step list, based on it's state\r\n * @param {HTMLElement} stepListElm\r\n */\n\n\nvar updateSections = function updateSections(stepListElm, newButtonState) {\n  var stepListSections = stepListElm.querySelectorAll(\".\".concat(cssClasses.section));\n  Array.from(stepListSections).forEach(function (sectionElm) {\n    var toggleBtnElm = Object(_utilities_dom_utilities__WEBPACK_IMPORTED_MODULE_3__[\"GetFirstElementOrDefault\"])(sectionElm, \".\".concat(cssClasses.detailsToggleButton));\n    var toggleButtonTextElm = Object(_utilities_dom_utilities__WEBPACK_IMPORTED_MODULE_3__[\"GetFirstElementOrDefault\"])(toggleBtnElm, \".\".concat(cssClasses.toggleButtonText));\n    var detailElms = sectionElm.querySelectorAll(\".\".concat(cssClasses.details));\n    var buttonState = newButtonState || toggleBtnElm.textContent;\n    setAriaExpanded(toggleBtnElm, !isButtonStateShow(buttonState));\n    Array.from(detailElms).forEach(function (elm) {\n      displaySectionDetails(elm, getOppositeDetailsToggleButtonState(buttonState));\n    });\n    setElementText(toggleButtonTextElm, buttonState);\n  });\n};\n/**\r\n * Manages the visible state of the toggle button based on a given details section\r\n * @param {NodeList} detailElms\r\n */\n\n\nvar updateToggleAllButton = function updateToggleAllButton(detailElms) {\n  if (!detailElms) {\n    console.error(\"There must be a least one details section per step list item.\");\n    return;\n  }\n\n  var stepListElm = detailElms[0].closest(\".\".concat(cssClasses.stepList));\n  var showAllButtonElm = Object(_utilities_dom_utilities__WEBPACK_IMPORTED_MODULE_3__[\"GetFirstElementOrDefault\"])(stepListElm, \".\".concat(cssClasses.showAllStepsButton));\n  var canHideAll = isHideAllVisible(showAllButtonElm);\n  var isAtLeastOneSectionDetailVisible = hasAtLeastOneDetailSectionVisible(stepListElm);\n\n  if (canHideAll && isAtLeastOneSectionDetailVisible) {\n    setElementText(showAllButtonElm, states.showAll);\n  }\n\n  if (!isAtLeastOneSectionDetailVisible) {\n    setElementText(showAllButtonElm, states.hideAll);\n  }\n};\n/**\r\n * Scripts to run after the page has loaded for this file\r\n */\n\n\nvar onDocumentReady = function onDocumentReady() {\n  // Get All Accordions\n  var stepListElms = document.querySelectorAll(\".\".concat(cssClasses.stepList)); // Check the state of each accordion\n\n  Array.from(stepListElms).forEach(function (stepListElm) {\n    var isDefaultStateStatic = stepListElm.classList.contains(states[\"static\"]);\n\n    if (isDefaultStateStatic) {\n      return;\n    }\n    /**\r\n     * Ensure we capture all events\r\n     * https://gomakethings.com/listening-for-click-events-with-vanilla-javascript/\r\n     */\n\n\n    document.addEventListener(\"click\", handleDocumentClick, false);\n    addStepListHoverEvents(stepListElm);\n    var isDefaultStateCollapsed = stepListElm.classList.contains(states.collapsed);\n\n    if (!isDefaultStateCollapsed) {\n      var toggleAllButtonElm = Object(_utilities_dom_utilities__WEBPACK_IMPORTED_MODULE_3__[\"GetFirstElementOrDefault\"])(stepListElm, \".\".concat(cssClasses.showAllStepsButton));\n      toggleAllButtonText(toggleAllButtonElm, states.show);\n    }\n\n    updateSections(stepListElm, isDefaultStateCollapsed ? \"\".concat(states.show, \" More\") : states.hide);\n  });\n};\n/** Handler when the DOM is fully loaded */\n\n\ndocument.addEventListener(\"DOMContentLoaded\", onDocumentReady);\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/components/StepList.js?");

/***/ }),

/***/ "./src/components/w3-dialog.js":
/*!*************************************!*\
  !*** ./src/components/w3-dialog.js ***!
  \*************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utilities_w3_utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utilities/w3-utilities */ \"./src/utilities/w3-utilities.js\");\n/* harmony import */ var _utilities_w3_utilities__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_utilities_w3_utilities__WEBPACK_IMPORTED_MODULE_0__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n\n/*\r\n *   Baltimore County NOTE: This was taken from w3c https://www.w3.org/TR/wai-aria-practices/examples/dialog-modal/dialog.html\r\n *   This content is licensed according to the W3C Software License at\r\n *   https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\r\n */\n\nvar aria = aria || {};\naria.Utils = aria.Utils || {};\n/**\r\n * @namespace aria\r\n */\n\nvar aria = aria || {};\n/**\r\n * @desc\r\n *  Key code constants\r\n */\n\naria.KeyCode = {\n  BACKSPACE: 8,\n  TAB: 9,\n  RETURN: 13,\n  ESC: 27,\n  SPACE: 32,\n  PAGE_UP: 33,\n  PAGE_DOWN: 34,\n  END: 35,\n  HOME: 36,\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n  DELETE: 46\n};\naria.Utils = aria.Utils || {}; // Polyfill src https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\n\naria.Utils.matches = function (element, selector) {\n  if (!Element.prototype.matches) {\n    Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n      var matches = element.parentNode.querySelectorAll(s);\n      var i = matches.length;\n\n      while (--i >= 0 && matches.item(i) !== this) {}\n\n      return i > -1;\n    };\n  }\n\n  return element.matches(selector);\n};\n\naria.Utils.remove = function (item) {\n  if (item.remove && typeof item.remove === \"function\") {\n    return item.remove();\n  }\n\n  if (item.parentNode && item.parentNode.removeChild && typeof item.parentNode.removeChild === \"function\") {\n    return item.parentNode.removeChild(item);\n  }\n\n  return false;\n};\n\naria.Utils.isFocusable = function (element) {\n  if (element.tabIndex > 0 || element.tabIndex === 0 && element.getAttribute(\"tabIndex\") !== null) {\n    return true;\n  }\n\n  if (element.disabled) {\n    return false;\n  }\n\n  switch (element.nodeName) {\n    case \"A\":\n      return !!element.href && element.rel != \"ignore\";\n\n    case \"INPUT\":\n      return element.type != \"hidden\" && element.type != \"file\";\n\n    case \"BUTTON\":\n    case \"SELECT\":\n    case \"TEXTAREA\":\n      return true;\n\n    default:\n      return false;\n  }\n};\n\naria.Utils.getAncestorBySelector = function (element, selector) {\n  if (!aria.Utils.matches(element, selector + \" \" + element.tagName)) {\n    // Element is not inside an element that matches selector\n    return null;\n  } // Move up the DOM tree until a parent matching the selector is found\n\n\n  var currentNode = element;\n  var ancestor = null;\n\n  while (ancestor === null) {\n    if (aria.Utils.matches(currentNode.parentNode, selector)) {\n      ancestor = currentNode.parentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return ancestor;\n};\n\naria.Utils.hasClass = function (element, className) {\n  return new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\").test(element.className);\n};\n\naria.Utils.addClass = function (element, className) {\n  if (!aria.Utils.hasClass(element, className)) {\n    element.className += \" \" + className;\n  }\n};\n\naria.Utils.removeClass = function (element, className) {\n  var classRegex = new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\");\n  element.className = element.className.replace(classRegex, \" \").trim();\n};\n\naria.Utils.bindMethods = function (object\n/* , ...methodNames */\n) {\n  var methodNames = Array.prototype.slice.call(arguments, 1);\n  methodNames.forEach(function (method) {\n    object[method] = object[method].bind(object);\n  });\n};\n\n(function () {\n  /*\r\n   * When util functions move focus around, set this true so the focus listener\r\n   * can ignore the events.\r\n   */\n  aria.Utils.IgnoreUtilFocusChanges = false;\n  aria.Utils.dialogOpenClass = \"has-dialog\";\n  /**\r\n   * @desc Set focus on descendant nodes until the first focusable element is\r\n   *       found.\r\n   * @param element\r\n   *          DOM node for which to find the first focusable descendant.\r\n   * @returns\r\n   *  true if a focusable element is found and focus is set.\r\n   */\n\n  aria.Utils.focusFirstDescendant = function (element) {\n    for (var i = 0; i < element.childNodes.length; i++) {\n      var child = element.childNodes[i];\n\n      if (aria.Utils.attemptFocus(child) || aria.Utils.focusFirstDescendant(child)) {\n        return true;\n      }\n    }\n\n    return false;\n  }; // end focusFirstDescendant\n\n  /**\r\n   * @desc Find the last descendant node that is focusable.\r\n   * @param element\r\n   *          DOM node for which to find the last focusable descendant.\r\n   * @returns\r\n   *  true if a focusable element is found and focus is set.\r\n   */\n\n\n  aria.Utils.focusLastDescendant = function (element) {\n    for (var i = element.childNodes.length - 1; i >= 0; i--) {\n      var child = element.childNodes[i];\n\n      if (aria.Utils.attemptFocus(child) || aria.Utils.focusLastDescendant(child)) {\n        return true;\n      }\n    }\n\n    return false;\n  }; // end focusLastDescendant\n\n  /**\r\n   * @desc Set Attempt to set focus on the current node.\r\n   * @param element\r\n   *          The node to attempt to focus on.\r\n   * @returns\r\n   *  true if element is focused.\r\n   */\n\n\n  aria.Utils.attemptFocus = function (element) {\n    if (!aria.Utils.isFocusable(element)) {\n      return false;\n    }\n\n    aria.Utils.IgnoreUtilFocusChanges = true;\n\n    try {\n      element.focus();\n    } catch (e) {}\n\n    aria.Utils.IgnoreUtilFocusChanges = false;\n    return document.activeElement === element;\n  }; // end attemptFocus\n\n  /* Modals can open modals. Keep track of them with this array. */\n\n\n  aria.OpenDialogList = aria.OpenDialogList || new Array(0);\n  /**\r\n   * @returns the last opened dialog (the current dialog)\r\n   */\n\n  aria.getCurrentDialog = function () {\n    if (aria.OpenDialogList && aria.OpenDialogList.length) {\n      return aria.OpenDialogList[aria.OpenDialogList.length - 1];\n    }\n  };\n\n  aria.closeCurrentDialog = function () {\n    var currentDialog = aria.getCurrentDialog();\n\n    if (currentDialog) {\n      currentDialog.close();\n      return true;\n    }\n\n    return false;\n  };\n\n  aria.handleEscape = function (event) {\n    var key = event.which || event.keyCode;\n\n    if (key === aria.KeyCode.ESC && aria.closeCurrentDialog()) {\n      event.stopPropagation();\n    }\n  };\n\n  document.addEventListener(\"keyup\", aria.handleEscape);\n  /**\r\n   * @constructor\r\n   * @desc Dialog object providing modal focus management.\r\n   *\r\n   * Assumptions: The element serving as the dialog container is present in the\r\n   * DOM and hidden. The dialog container has role='dialog'.\r\n   *\r\n   * @param dialogId\r\n   *          The ID of the element serving as the dialog container.\r\n   * @param focusAfterClosed\r\n   *          Either the DOM node or the ID of the DOM node to focus when the\r\n   *          dialog closes.\r\n   * @param focusFirst\r\n   *          Optional parameter containing either the DOM node or the ID of the\r\n   *          DOM node to focus when the dialog opens. If not specified, the\r\n   *          first focusable element in the dialog will receive focus.\r\n   */\n\n  aria.Dialog = function (dialogId, focusAfterClosed, focusFirst) {\n    this.dialogNode = document.getElementById(dialogId);\n\n    if (this.dialogNode === null) {\n      throw new Error('No element found with id=\"' + dialogId + '\".');\n    }\n\n    var validRoles = [\"dialog\", \"alertdialog\"];\n    var isDialog = (this.dialogNode.getAttribute(\"role\") || \"\").trim().split(/\\s+/g).some(function (token) {\n      return validRoles.some(function (role) {\n        return token === role;\n      });\n    });\n\n    if (!isDialog) {\n      throw new Error(\"Dialog() requires a DOM element with ARIA role of dialog or alertdialog.\");\n    } // Wrap in an individual backdrop element if one doesn't exist\n    // Native <dialog> elements use the ::backdrop pseudo-element, which\n    // works similarly.\n\n\n    var backdropClass = \"dialog-backdrop\";\n\n    if (this.dialogNode.parentNode.classList.contains(backdropClass)) {\n      this.backdropNode = this.dialogNode.parentNode;\n    } else {\n      this.backdropNode = document.createElement(\"div\");\n      this.backdropNode.className = backdropClass;\n      this.dialogNode.parentNode.insertBefore(this.backdropNode, this.dialogNode);\n      this.backdropNode.appendChild(this.dialogNode);\n    }\n\n    this.backdropNode.classList.add(\"active\"); // Disable scroll on the body element\n\n    document.body.classList.add(aria.Utils.dialogOpenClass);\n\n    if (typeof focusAfterClosed === \"string\") {\n      this.focusAfterClosed = document.getElementById(focusAfterClosed);\n    } else if (_typeof(focusAfterClosed) === \"object\") {\n      this.focusAfterClosed = focusAfterClosed;\n    } else {\n      throw new Error(\"the focusAfterClosed parameter is required for the aria.Dialog constructor.\");\n    }\n\n    if (typeof focusFirst === \"string\") {\n      this.focusFirst = document.getElementById(focusFirst);\n    } else if (_typeof(focusFirst) === \"object\") {\n      this.focusFirst = focusFirst;\n    } else {\n      this.focusFirst = null;\n    } // Bracket the dialog node with two invisible, focusable nodes.\n    // While this dialog is open, we use these to make sure that focus never\n    // leaves the document even if dialogNode is the first or last node.\n\n\n    var preDiv = document.createElement(\"div\");\n    this.preNode = this.dialogNode.parentNode.insertBefore(preDiv, this.dialogNode);\n    this.preNode.tabIndex = 0;\n    var postDiv = document.createElement(\"div\");\n    this.postNode = this.dialogNode.parentNode.insertBefore(postDiv, this.dialogNode.nextSibling);\n    this.postNode.tabIndex = 0; // If this modal is opening on top of one that is already open,\n    // get rid of the document focus listener of the open dialog.\n\n    if (aria.OpenDialogList.length > 0) {\n      aria.getCurrentDialog().removeListeners();\n    }\n\n    this.addListeners();\n    aria.OpenDialogList.push(this);\n    this.clearDialog();\n    /** baltimore county specific - added dg_modal and dark to help with  styling */\n\n    this.dialogNode.className = \"dg_modal default_dialog dark\"; // make visible\n\n    if (this.focusFirst) {\n      this.focusFirst.focus();\n    } else {\n      aria.Utils.focusFirstDescendant(this.dialogNode);\n    }\n\n    this.lastFocus = document.activeElement;\n  }; // end Dialog constructor\n\n\n  aria.Dialog.prototype.clearDialog = function () {\n    Array.prototype.map.call(this.dialogNode.querySelectorAll(\"input\"), function (input) {\n      input.value = \"\";\n    });\n  };\n  /**\r\n   * @desc\r\n   *  Hides the current top dialog,\r\n   *  removes listeners of the top dialog,\r\n   *  restore listeners of a parent dialog if one was open under the one that just closed,\r\n   *  and sets focus on the element specified for focusAfterClosed.\r\n   */\n\n\n  aria.Dialog.prototype.close = function () {\n    aria.OpenDialogList.pop();\n    this.removeListeners();\n    aria.Utils.remove(this.preNode);\n    aria.Utils.remove(this.postNode);\n    this.dialogNode.className = \"hidden\";\n    this.backdropNode.classList.remove(\"active\");\n    this.focusAfterClosed.focus(); // If a dialog was open underneath this one, restore its listeners.\n\n    if (aria.OpenDialogList.length > 0) {\n      aria.getCurrentDialog().addListeners();\n    } else {\n      document.body.classList.remove(aria.Utils.dialogOpenClass);\n    }\n  }; // end close\n\n  /**\r\n   * @desc\r\n   *  Hides the current dialog and replaces it with another.\r\n   *\r\n   * @param newDialogId\r\n   *  ID of the dialog that will replace the currently open top dialog.\r\n   * @param newFocusAfterClosed\r\n   *  Optional ID or DOM node specifying where to place focus when the new dialog closes.\r\n   *  If not specified, focus will be placed on the element specified by the dialog being replaced.\r\n   * @param newFocusFirst\r\n   *  Optional ID or DOM node specifying where to place focus in the new dialog when it opens.\r\n   *  If not specified, the first focusable element will receive focus.\r\n   */\n\n\n  aria.Dialog.prototype.replace = function (newDialogId, newFocusAfterClosed, newFocusFirst) {\n    var closedDialog = aria.getCurrentDialog();\n    aria.OpenDialogList.pop();\n    this.removeListeners();\n    aria.Utils.remove(this.preNode);\n    aria.Utils.remove(this.postNode);\n    this.dialogNode.className = \"hidden\";\n    this.backdropNode.classList.remove(\"active\");\n    var focusAfterClosed = newFocusAfterClosed || this.focusAfterClosed;\n    var dialog = new aria.Dialog(newDialogId, focusAfterClosed, newFocusFirst);\n  }; // end replace\n\n\n  aria.Dialog.prototype.addListeners = function () {\n    document.addEventListener(\"focus\", this.trapFocus, true);\n  }; // end addListeners\n\n\n  aria.Dialog.prototype.removeListeners = function () {\n    document.removeEventListener(\"focus\", this.trapFocus, true);\n  }; // end removeListeners\n\n\n  aria.Dialog.prototype.trapFocus = function (event) {\n    if (aria.Utils.IgnoreUtilFocusChanges) {\n      return;\n    }\n\n    var currentDialog = aria.getCurrentDialog();\n\n    if (currentDialog.dialogNode.contains(event.target)) {\n      currentDialog.lastFocus = event.target;\n    } else {\n      aria.Utils.focusFirstDescendant(currentDialog.dialogNode);\n\n      if (currentDialog.lastFocus == document.activeElement) {\n        aria.Utils.focusLastDescendant(currentDialog.dialogNode);\n      }\n\n      currentDialog.lastFocus = document.activeElement;\n    }\n  }; // end trapFocus\n\n\n  window.openDialog = function (dialogId, focusAfterClosed, focusFirst) {\n    var dialog = new aria.Dialog(dialogId, focusAfterClosed, focusFirst);\n  };\n\n  window.closeDialog = function (closeButton) {\n    var topDialog = aria.getCurrentDialog();\n\n    if (topDialog.dialogNode.contains(closeButton)) {\n      topDialog.close();\n    }\n  }; // end closeDialog\n\n\n  window.replaceDialog = function (newDialogId, newFocusAfterClosed, newFocusFirst) {\n    var topDialog = aria.getCurrentDialog();\n\n    if (topDialog.dialogNode.contains(document.activeElement)) {\n      topDialog.replace(newDialogId, newFocusAfterClosed, newFocusFirst);\n    }\n  }; // end replaceDialog\n\n})();\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/components/w3-dialog.js?");

/***/ }),

/***/ "./src/lib/modernizers-css-grid.js":
/*!*****************************************!*\
  !*** ./src/lib/modernizers-css-grid.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\r\n * Adds class to the body of the browser if `cssgrid` is available for use.\r\n * https://modernizr.com/download?cssgrid_cssgridlegacy-setclasses&q=grid\r\n */\n!function (e, n, t) {\n  function r(e, n) {\n    return _typeof(e) === n;\n  }\n\n  function o() {\n    var e, n, t, o, s, i, l;\n\n    for (var a in w) {\n      if (w.hasOwnProperty(a)) {\n        if (e = [], n = w[a], n.name && (e.push(n.name.toLowerCase()), n.options && n.options.aliases && n.options.aliases.length)) for (t = 0; t < n.options.aliases.length; t++) {\n          e.push(n.options.aliases[t].toLowerCase());\n        }\n\n        for (o = r(n.fn, \"function\") ? n.fn() : n.fn, s = 0; s < e.length; s++) {\n          i = e[s], l = i.split(\".\"), 1 === l.length ? Modernizr[l[0]] = o : (!Modernizr[l[0]] || Modernizr[l[0]] instanceof Boolean || (Modernizr[l[0]] = new Boolean(Modernizr[l[0]])), Modernizr[l[0]][l[1]] = o), C.push((o ? \"\" : \"no-\") + l.join(\"-\"));\n        }\n      }\n    }\n  }\n\n  function s(e) {\n    var n = _.className,\n        t = Modernizr._config.classPrefix || \"\";\n\n    if (x && (n = n.baseVal), Modernizr._config.enableJSClass) {\n      var r = new RegExp(\"(^|\\\\s)\" + t + \"no-js(\\\\s|$)\");\n      n = n.replace(r, \"$1\" + t + \"js$2\");\n    }\n\n    Modernizr._config.enableClasses && (n += \" \" + t + e.join(\" \" + t), x ? _.className.baseVal = n : _.className = n);\n  }\n\n  function i() {\n    return \"function\" != typeof n.createElement ? n.createElement(arguments[0]) : x ? n.createElementNS.call(n, \"http://www.w3.org/2000/svg\", arguments[0]) : n.createElement.apply(n, arguments);\n  }\n\n  function l(e, n) {\n    return !!~(\"\" + e).indexOf(n);\n  }\n\n  function a(e) {\n    return e.replace(/([a-z])-([a-z])/g, function (e, n, t) {\n      return n + t.toUpperCase();\n    }).replace(/^-/, \"\");\n  }\n\n  function u(e, n) {\n    return function () {\n      return e.apply(n, arguments);\n    };\n  }\n\n  function f(e, n, t) {\n    var o;\n\n    for (var s in e) {\n      if (e[s] in n) return t === !1 ? e[s] : (o = n[e[s]], r(o, \"function\") ? u(o, t || n) : o);\n    }\n\n    return !1;\n  }\n\n  function c(e) {\n    return e.replace(/([A-Z])/g, function (e, n) {\n      return \"-\" + n.toLowerCase();\n    }).replace(/^ms-/, \"-ms-\");\n  }\n\n  function d(n, t, r) {\n    var o;\n\n    if (\"getComputedStyle\" in e) {\n      o = getComputedStyle.call(e, n, t);\n      var s = e.console;\n      if (null !== o) r && (o = o.getPropertyValue(r));else if (s) {\n        var i = s.error ? \"error\" : \"log\";\n        s[i].call(s, \"getComputedStyle returning null, its possible modernizr test results are inaccurate\");\n      }\n    } else o = !t && n.currentStyle && n.currentStyle[r];\n\n    return o;\n  }\n\n  function p() {\n    var e = n.body;\n    return e || (e = i(x ? \"svg\" : \"body\"), e.fake = !0), e;\n  }\n\n  function m(e, t, r, o) {\n    var s,\n        l,\n        a,\n        u,\n        f = \"modernizr\",\n        c = i(\"div\"),\n        d = p();\n    if (parseInt(r, 10)) for (; r--;) {\n      a = i(\"div\"), a.id = o ? o[r] : f + (r + 1), c.appendChild(a);\n    }\n    return s = i(\"style\"), s.type = \"text/css\", s.id = \"s\" + f, (d.fake ? d : c).appendChild(s), d.appendChild(c), s.styleSheet ? s.styleSheet.cssText = e : s.appendChild(n.createTextNode(e)), c.id = f, d.fake && (d.style.background = \"\", d.style.overflow = \"hidden\", u = _.style.overflow, _.style.overflow = \"hidden\", _.appendChild(d)), l = t(c, e), d.fake ? (d.parentNode.removeChild(d), _.style.overflow = u, _.offsetHeight) : c.parentNode.removeChild(c), !!l;\n  }\n\n  function g(n, r) {\n    var o = n.length;\n\n    if (\"CSS\" in e && \"supports\" in e.CSS) {\n      for (; o--;) {\n        if (e.CSS.supports(c(n[o]), r)) return !0;\n      }\n\n      return !1;\n    }\n\n    if (\"CSSSupportsRule\" in e) {\n      for (var s = []; o--;) {\n        s.push(\"(\" + c(n[o]) + \":\" + r + \")\");\n      }\n\n      return s = s.join(\" or \"), m(\"@supports (\" + s + \") { #modernizr { position: absolute; } }\", function (e) {\n        return \"absolute\" == d(e, null, \"position\");\n      });\n    }\n\n    return t;\n  }\n\n  function y(e, n, o, s) {\n    function u() {\n      c && (delete N.style, delete N.modElem);\n    }\n\n    if (s = r(s, \"undefined\") ? !1 : s, !r(o, \"undefined\")) {\n      var f = g(e, o);\n      if (!r(f, \"undefined\")) return f;\n    }\n\n    for (var c, d, p, m, y, v = [\"modernizr\", \"tspan\", \"samp\"]; !N.style && v.length;) {\n      c = !0, N.modElem = i(v.shift()), N.style = N.modElem.style;\n    }\n\n    for (p = e.length, d = 0; p > d; d++) {\n      if (m = e[d], y = N.style[m], l(m, \"-\") && (m = a(m)), N.style[m] !== t) {\n        if (s || r(o, \"undefined\")) return u(), \"pfx\" == n ? m : !0;\n\n        try {\n          N.style[m] = o;\n        } catch (h) {}\n\n        if (N.style[m] != y) return u(), \"pfx\" == n ? m : !0;\n      }\n    }\n\n    return u(), !1;\n  }\n\n  function v(e, n, t, o, s) {\n    var i = e.charAt(0).toUpperCase() + e.slice(1),\n        l = (e + \" \" + P.join(i + \" \") + i).split(\" \");\n    return r(n, \"string\") || r(n, \"undefined\") ? y(l, n, o, s) : (l = (e + \" \" + z.join(i + \" \") + i).split(\" \"), f(l, n, t));\n  }\n\n  function h(e, n, r) {\n    return v(e, t, t, n, r);\n  }\n\n  var C = [],\n      w = [],\n      S = {\n    _version: \"3.6.0\",\n    _config: {\n      classPrefix: \"\",\n      enableClasses: !0,\n      enableJSClass: !0,\n      usePrefixes: !0\n    },\n    _q: [],\n    on: function on(e, n) {\n      var t = this;\n      setTimeout(function () {\n        n(t[e]);\n      }, 0);\n    },\n    addTest: function addTest(e, n, t) {\n      w.push({\n        name: e,\n        fn: n,\n        options: t\n      });\n    },\n    addAsyncTest: function addAsyncTest(e) {\n      w.push({\n        name: null,\n        fn: e\n      });\n    }\n  },\n      Modernizr = function Modernizr() {};\n\n  Modernizr.prototype = S, Modernizr = new Modernizr();\n\n  var _ = n.documentElement,\n      x = \"svg\" === _.nodeName.toLowerCase(),\n      b = \"Moz O ms Webkit\",\n      P = S._config.usePrefixes ? b.split(\" \") : [];\n\n  S._cssomPrefixes = P;\n  var z = S._config.usePrefixes ? b.toLowerCase().split(\" \") : [];\n  S._domPrefixes = z;\n  var E = {\n    elem: i(\"modernizr\")\n  };\n\n  Modernizr._q.push(function () {\n    delete E.elem;\n  });\n\n  var N = {\n    style: E.elem.style\n  };\n  Modernizr._q.unshift(function () {\n    delete N.style;\n  }), S.testAllProps = v, S.testAllProps = h, Modernizr.addTest(\"cssgridlegacy\", h(\"grid-columns\", \"10px\", !0)), Modernizr.addTest(\"cssgrid\", h(\"grid-template-rows\", \"none\", !0)), o(), s(C), delete S.addTest, delete S.addAsyncTest;\n\n  for (var T = 0; T < Modernizr._q.length; T++) {\n    Modernizr._q[T]();\n  }\n\n  e.Modernizr = Modernizr;\n}(window, document);\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/lib/modernizers-css-grid.js?");

/***/ }),

/***/ "./src/polyfills/array-from.polyfill.js":
/*!**********************************************!*\
  !*** ./src/polyfills/array-from.polyfill.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Production steps of ECMA-262, Edition 6, 22.1.2.1\nif (!Array.from) {\n  Array.from = function () {\n    var toStr = Object.prototype.toString;\n\n    var isCallable = function isCallable(fn) {\n      return typeof fn === \"function\" || toStr.call(fn) === \"[object Function]\";\n    };\n\n    var toInteger = function toInteger(value) {\n      var number = Number(value);\n\n      if (isNaN(number)) {\n        return 0;\n      }\n\n      if (number === 0 || !isFinite(number)) {\n        return number;\n      }\n\n      return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n    };\n\n    var maxSafeInteger = Math.pow(2, 53) - 1;\n\n    var toLength = function toLength(value) {\n      var len = toInteger(value);\n      return Math.min(Math.max(len, 0), maxSafeInteger);\n    }; // The length property of the from method is 1.\n\n\n    return function from(arrayLike\n    /*, mapFn, thisArg */\n    ) {\n      // 1. Let C be the this value.\n      var C = this; // 2. Let items be ToObject(arrayLike).\n\n      var items = Object(arrayLike); // 3. ReturnIfAbrupt(items).\n\n      if (arrayLike == null) {\n        throw new TypeError(\"Array.from requires an array-like object - not null or undefined\");\n      } // 4. If mapfn is undefined, then let mapping be false.\n\n\n      var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n      var T;\n\n      if (typeof mapFn !== \"undefined\") {\n        // 5. else\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n        if (!isCallable(mapFn)) {\n          throw new TypeError(\"Array.from: when provided, the second argument must be a function\");\n        } // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n\n\n        if (arguments.length > 2) {\n          T = arguments[2];\n        }\n      } // 10. Let lenValue be Get(items, \"length\").\n      // 11. Let len be ToLength(lenValue).\n\n\n      var len = toLength(items.length); // 13. If IsConstructor(C) is true, then\n      // 13. a. Let A be the result of calling the [[Construct]] internal method\n      // of C with an argument list containing the single item len.\n      // 14. a. Else, Let A be ArrayCreate(len).\n\n      var A = isCallable(C) ? Object(new C(len)) : new Array(len); // 16. Let k be 0.\n\n      var k = 0; // 17. Repeat, while k < len… (also steps a - h)\n\n      var kValue;\n\n      while (k < len) {\n        kValue = items[k];\n\n        if (mapFn) {\n          A[k] = typeof T === \"undefined\" ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\n        } else {\n          A[k] = kValue;\n        }\n\n        k += 1;\n      } // 18. Let putStatus be Put(A, \"length\", len, true).\n\n\n      A.length = len; // 20. Return A.\n\n      return A;\n    };\n  }();\n}\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/polyfills/array-from.polyfill.js?");

/***/ }),

/***/ "./src/polyfills/closest.polyfill.js":
/*!*******************************************!*\
  !*** ./src/polyfills/closest.polyfill.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("if (!Element.prototype.matches) {\n  Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n}\n\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function (s) {\n    var el = this;\n\n    do {\n      if (el.matches(s)) return el;\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n\n    return null;\n  };\n}\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/polyfills/closest.polyfill.js?");

/***/ }),

/***/ "./src/polyfills/includes.polyfill.js":
/*!********************************************!*\
  !*** ./src/polyfills/includes.polyfill.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("if (!String.prototype.includes) {\n  String.prototype.includes = function (search, start) {\n    \"use strict\";\n\n    if (typeof start !== \"number\") {\n      start = 0;\n    }\n\n    if (start + search.length > this.length) {\n      return false;\n    } else {\n      return this.indexOf(search, start) !== -1;\n    }\n  };\n}\n\nif (!Element.prototype.matches) {\n  Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n}\n\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function (s) {\n    var el = this;\n\n    do {\n      if (el.matches(s)) return el;\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n\n    return null;\n  };\n}\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/polyfills/includes.polyfill.js?");

/***/ }),

/***/ "./src/polyfills/nodelist-foreach.polyfill.js":
/*!****************************************************!*\
  !*** ./src/polyfills/nodelist-foreach.polyfill.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("if (\"NodeList\" in window && !NodeList.prototype.forEach) {\n  console.info(\"polyfill for IE11\");\n\n  NodeList.prototype.forEach = function (callback, thisArg) {\n    thisArg = thisArg || window;\n\n    for (var i = 0; i < this.length; i++) {\n      callback.call(thisArg, this[i], i, this);\n    }\n  };\n}\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/polyfills/nodelist-foreach.polyfill.js?");

/***/ }),

/***/ "./src/site/SeForm.js":
/*!****************************!*\
  !*** ./src/site/SeForm.js ***!
  \****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utilities_dom_utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utilities/dom.utilities */ \"./src/utilities/dom.utilities.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\nvar GenerateCheckboxes = function GenerateCheckboxes() {\n  document.querySelectorAll(\".seCheckbox\").forEach(function (inputElm) {\n    inputElm.closest(\"div\").classList.add(\"dg_checkbox\");\n  });\n};\n\nvar GenerateRadioButtons = function GenerateRadioButtons() {\n  document.querySelectorAll(\".seRadio\").forEach(function (inputElm) {\n    inputElm.closest(\"div\").classList.add(\"dg_radio\");\n  });\n};\n/**\r\n * Moves Checkbox fields (Ex Disclaimer)so that they are styled like other se form elements.\r\n */\n\n\nvar MoveCheckboxes = function MoveCheckboxes() {\n  var horizontalCheckBoxElms = document.querySelectorAll(\".SEAFGroupHorizontal\");\n\n  if (horizontalCheckBoxElms && horizontalCheckBoxElms.length > 0) {\n    _toConsumableArray(horizontalCheckBoxElms).forEach(function (elm) {\n      var fieldContainerElm = Object(_utilities_dom_utilities__WEBPACK_IMPORTED_MODULE_0__[\"GetFirstElementOrDefault\"])(elm, \".seFieldCellHorizontal\");\n      var nextSiblingElm = fieldContainerElm.nextElementSibling;\n      var shouldBeMoved = fieldContainerElm && nextSiblingElm.classList.contains(\"seLabelCellHorizontal\");\n\n      if (shouldBeMoved) {\n        var labelElm = Object(_utilities_dom_utilities__WEBPACK_IMPORTED_MODULE_0__[\"GetFirstElementOrDefault\"])(nextSiblingElm, \"label\");\n        labelElm.classList.add(\"seCheckboxLabel\");\n        fieldContainerElm.appendChild(labelElm);\n      }\n    });\n  }\n};\n/** Handler when the DOM is fully loaded */\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  GenerateCheckboxes();\n  GenerateRadioButtons();\n  MoveCheckboxes();\n});\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/site/SeForm.js?");

/***/ }),

/***/ "./src/site/Site.js":
/*!**************************!*\
  !*** ./src/site/Site.js ***!
  \**************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lib_modernizers_css_grid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/modernizers-css-grid */ \"./src/lib/modernizers-css-grid.js\");\n/* harmony import */ var _lib_modernizers_css_grid__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_lib_modernizers_css_grid__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_Accordion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/Accordion */ \"./src/components/Accordion.js\");\n/* harmony import */ var _components_Modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/Modal */ \"./src/components/Modal.js\");\n/* harmony import */ var _components_StepList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/StepList */ \"./src/components/StepList.js\");\n/* harmony import */ var _components_EventFilter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/EventFilter */ \"./src/components/EventFilter.js\");\n/* harmony import */ var _components_AltList__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/AltList */ \"./src/components/AltList.js\");\n/* harmony import */ var _components_AltList__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_components_AltList__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _SiteNavigation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./SiteNavigation */ \"./src/site/SiteNavigation.js\");\n/* harmony import */ var _SeForm__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./SeForm */ \"./src/site/SeForm.js\");\n/* harmony import */ var _SiteSearch__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./SiteSearch */ \"./src/site/SiteSearch.js\");\n/* harmony import */ var _SiteSearch__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_SiteSearch__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _SocialMedia__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./SocialMedia */ \"./src/site/SocialMedia.js\");\n/* harmony import */ var _SocialMedia__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_SocialMedia__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _utilities_googlesearch__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utilities/googlesearch */ \"./src/utilities/googlesearch.js\");\n/* harmony import */ var _utilities_googlesearch__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_utilities_googlesearch__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _utilities_hideShowButton__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utilities/hideShowButton */ \"./src/utilities/hideShowButton.js\");\n/* harmony import */ var _utilities_hideShowButton__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_utilities_hideShowButton__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _utilities_hideParksAbout__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../utilities/hideParksAbout */ \"./src/utilities/hideParksAbout.js\");\n/* harmony import */ var _utilities_hideParksAbout__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_utilities_hideParksAbout__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var _components_ScrollToTop__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../components/ScrollToTop */ \"./src/components/ScrollToTop.js\");\n/* harmony import */ var _components_ScrollToTop__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_components_ScrollToTop__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var _components_AddImageAltText__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../components/AddImageAltText */ \"./src/components/AddImageAltText.js\");\n/* harmony import */ var _components_AddImageAltText__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_components_AddImageAltText__WEBPACK_IMPORTED_MODULE_14__);\n/** All files required on each page of the dotgov website */\n\n/** Site Wide Components */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/site/Site.js?");

/***/ }),

/***/ "./src/site/SiteNavigation.js":
/*!************************************!*\
  !*** ./src/site/SiteNavigation.js ***!
  \************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utilities_dom_utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utilities/dom.utilities */ \"./src/utilities/dom.utilities.js\");\n/* harmony import */ var focus_trap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! focus-trap */ \"./node_modules/focus-trap/index.js\");\n/* harmony import */ var focus_trap__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(focus_trap__WEBPACK_IMPORTED_MODULE_1__);\n\n\nvar attributes = {\n  ariaExpanded: \"aria-expanded\",\n  tabIndex: \"tabindex\"\n};\nvar icons = {\n  open: \"fa-bars\",\n  close: \"fa-times\"\n};\nvar ids = {\n  siteNav: \"bc_site-nav\",\n  siteNavToggleButton: \"bc_site-nav__toggle-button\",\n  page: \"bc_page\"\n};\nvar cssClasses = {\n  hidden: \"invisible\",\n  hiddenInit: \"hidden-init\",\n  isActive: \"is-active\",\n  isDisabled: \"is-disabled\",\n  siteNavToggleButtonText: \"bc_site-nav__toggle-button__text\",\n  siteNavListContainer: \"bc_site-nav__list-container\",\n  isVisible: \"is-visible\"\n};\nvar invisibleTabIndex = \"-1\";\n/** Allows us to hide an item from tabbing */\n\nvar siteNavFocusTrap;\n/**\r\n * * Hide/Show the site navigation based on the given shouldShow param\r\n * @param {boolean} shouldShow if set to true the site navigation will be shown\r\n */\n\nvar toggleSiteNav = function toggleSiteNav(shouldShow) {\n  var gscElement = document.getElementsByClassName(\"gsc-completion-container\");\n\n  if (gscElement) {\n    if (shouldShow) {\n      for (var i = 0; i < gscElement.length; i += 1) {\n        gscElement[i].style.display = \"none\";\n        gscElement[i].style.position = \"relative\";\n      }\n    } else {\n      var gscElementSearch = document.getElementsByClassName(\"fas fa-times\");\n\n      if (gscElementSearch[0]) {\n        for (var i = 0; i < gscElement.length; i += 1) {\n          gscElement[i].style.display = \"\";\n          gscElement[i].style.position = \"\";\n        }\n      }\n    }\n  }\n\n  var classListAction = shouldShow ? \"add\" : \"remove\";\n  var siteNavToggleButtonElm = document.getElementById(ids.siteNavToggleButton);\n  var buttonIconElm = Object(_utilities_dom_utilities__WEBPACK_IMPORTED_MODULE_0__[\"GetFirstElementOrDefault\"])(siteNavToggleButtonElm, \"i\");\n  var buttonIconTextElm = Object(_utilities_dom_utilities__WEBPACK_IMPORTED_MODULE_0__[\"GetFirstElementOrDefault\"])(siteNavToggleButtonElm, \".\".concat(cssClasses.siteNavToggleButtonText));\n  var siteNavContainerElm = Object(_utilities_dom_utilities__WEBPACK_IMPORTED_MODULE_0__[\"GetFirstElementOrDefault\"])(document.getElementById(ids.siteNav), \".\".concat(cssClasses.siteNavListContainer));\n  var pageElm = document.getElementById(ids.page); // Update toggle button text\n\n  buttonIconTextElm.textContent = shouldShow ? \"Close\" : \"Menu\"; // Toggle the content hidden class\n\n  siteNavContainerElm.classList[shouldShow ? \"remove\" : \"add\"](cssClasses.hidden); // Toggle the toggle button icon\n\n  buttonIconElm.classList.remove(shouldShow ? icons.open : icons.close);\n  buttonIconElm.classList.add(shouldShow ? icons.close : icons.open); // Set / Remove aria-expanded attributes\n\n  Object(_utilities_dom_utilities__WEBPACK_IMPORTED_MODULE_0__[\"SetAttributeForElms\"])([siteNavToggleButtonElm, pageElm], attributes.ariaExpanded, shouldShow); // Set / Remove tab-index inside Site Nav\n\n  updateSiteNavTabIndex(shouldShow); // Activate or deactivate proper focus state\n\n  siteNavFocusTrap[shouldShow ? \"activate\" : \"deactivate\"](); // Add / Remove esc listener\n\n  document[shouldShow ? \"addEventListener\" : \"removeEventListener\"](\"keydown\", handleDocumentKeyDown, true); // Hide / Show the site nav\n\n  document.getElementById(ids.siteNav).classList[classListAction](cssClasses.isActive); // Enable / Disabled page and body\n\n  var disabledElms = [pageElm, document.body];\n\n  if (shouldShow) {\n    Object(_utilities_dom_utilities__WEBPACK_IMPORTED_MODULE_0__[\"AddClassToElms\"])(disabledElms, cssClasses.isDisabled);\n  } else {\n    Object(_utilities_dom_utilities__WEBPACK_IMPORTED_MODULE_0__[\"RemoveClassFromElms\"])(disabledElms, cssClasses.isDisabled);\n  }\n};\n/**\r\n * Handle any click on the document. An if else block will handle any specific\r\n * click events we want to capture.\r\n * @param {document:click} clickEvent - the observable click event\r\n * @listens document:click\r\n */\n\n\nvar handleDocumentClick = function handleDocumentClick(clickEvent) {\n  var target = clickEvent.target;\n  var isSiteNavButtonClick = target.id === ids.siteNavToggleButton || target.closest(\"#\".concat(ids.siteNavToggleButton));\n  var pageElm = target.closest(\"#\".concat(ids.page));\n  var isDisabledPageClick = pageElm && pageElm.classList.contains(cssClasses.isDisabled);\n\n  if (isSiteNavButtonClick) {\n    handleSiteNavigationButtonClick(clickEvent);\n  } else if (isDisabledPageClick) {\n    // Close the site nav\n    toggleSiteNav(false);\n  }\n\n  return;\n};\n/**\r\n * Handle any keydown on the document. An switch statement will handle any specific\r\n * click events we want to capture.\r\n * @param {document:keydown} keyDownEvent - the observable keydown event\r\n * @listens document:keydown\r\n */\n\n\nvar handleDocumentKeyDown = function handleDocumentKeyDown(event) {\n  var key = event.key,\n      keyCode = event.keyCode;\n  /** Ensure ESC key collapses the menu in all browsers */\n\n  if (key === \"Escape\" || keyCode === 27) {\n    toggleSiteNav(false);\n  } else {\n    return;\n  } // Cancel the default action to avoid it being handled twice\n\n\n  event.preventDefault();\n};\n/**\r\n * Handle the site navigation button click. Works as a toggle button to show / hide site navigation.\r\n * @param {button:click} clickEvent - the observable click event\r\n * @listens button:click\r\n */\n\n\nvar handleSiteNavigationButtonClick = function handleSiteNavigationButtonClick(clickEvent) {\n  var target = clickEvent.target;\n  var siteNavToggleButton = target.id === ids.siteNavToggleButton ? target : target.closest(\"#\".concat(ids.siteNavToggleButton));\n  var buttonAriaExpandedValue = siteNavToggleButton.getAttribute(attributes.ariaExpanded);\n  /** If no aria attribute exists this means the menu is closed and we want to show it. */\n\n  var shouldShowNav = !buttonAriaExpandedValue || !(buttonAriaExpandedValue.toLowerCase() === \"true\");\n  toggleSiteNav(shouldShowNav);\n};\n/**\r\n * Do stuff after the dom has loaded\r\n */\n\n\nvar onDocumentReady = function onDocumentReady() {\n  // Allows users to use the menu even if javascript is not enabled\n  var siteNavToggleButton = document.getElementById(ids.siteNavToggleButton);\n\n  if (siteNavToggleButton) {\n    siteNavToggleButton.classList.remove(cssClasses.hiddenInit); //TODO: do we still need this?\n  }\n\n  var siteNav = document.getElementById(ids.siteNav);\n\n  if (siteNav) {\n    Object(_utilities_dom_utilities__WEBPACK_IMPORTED_MODULE_0__[\"GetFirstElementOrDefault\"])(siteNav, \".\".concat(cssClasses.siteNavListContainer)).classList.add(cssClasses.hidden);\n    Object(_utilities_dom_utilities__WEBPACK_IMPORTED_MODULE_0__[\"SetAttributeForElms\"])(siteNav.querySelectorAll(\"a\"), attributes.tabIndex, invisibleTabIndex);\n  }\n  /**\r\n   * Initialize a focus trap for use when the site navigation is active / visible\r\n   * See http://davidtheclark.github.io/focus-trap/ for more details.\r\n   */\n\n\n  siteNavFocusTrap = focus_trap__WEBPACK_IMPORTED_MODULE_1___default()(document.getElementById(ids.siteNav), {\n    clickOutsideDeactivates: true\n  });\n};\n/**\r\n * Remove site nav items from the tab index if the site nav is hidden\r\n * @param {boolean} shouldShow flag that denotes if the site nav should be shown\r\n */\n\n\nvar updateSiteNavTabIndex = function updateSiteNavTabIndex(shouldShow) {\n  var siteNavLinkElms = document.getElementById(ids.siteNav).querySelectorAll(\"a\");\n  siteNavLinkElms.forEach(function (siteNavLinkElm) {\n    if (shouldShow) {\n      siteNavLinkElm.removeAttribute(attributes.tabIndex);\n    } else {\n      siteNavLinkElm.setAttribute(attributes.tabIndex, invisibleTabIndex);\n    }\n  });\n};\n/** Handler when the DOM is fully loaded */\n\n\ndocument.addEventListener(\"DOMContentLoaded\", onDocumentReady);\n/**\r\n * Ensure we capture all events\r\n * https://gomakethings.com/listening-for-click-events-with-vanilla-javascript/\r\n */\n\ndocument.addEventListener(\"click\", handleDocumentClick, false);\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/site/SiteNavigation.js?");

/***/ }),

/***/ "./src/site/SiteSearch.js":
/*!********************************!*\
  !*** ./src/site/SiteSearch.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var mobileSearchButtonId = \"dg_mobile-search-button\";\nvar searchForm = \"search-form\";\nvar cssClasses = {\n  fontAwesome: \"fa\",\n  closeSearchIcon: \"fa-times\",\n  expandSearchIcon: \"fa-search\",\n  isVisible: \"is-visible\"\n};\n/**\r\n * Changes the mobile search buttons icon to a close button when shouldCollapseSearch search is set to false.\r\n * Otherwise the icon will change to a search icon\r\n * @param {*} searchIconElm icon element for the mobile search button\r\n * @param {*} shouldCollapseSearch if true, the result of this function will be to hide the search form\r\n */\n\nvar updateSearchIcon = function updateSearchIcon(searchIconElm, shouldCollapseSearch) {\n  // Reset Icon\n  searchIconElm.className = \"\";\n  searchIconElm.classList.add(cssClasses.fontAwesome);\n  searchIconElm.classList.add(shouldCollapseSearch ? cssClasses.expandSearchIcon : cssClasses.closeSearchIcon);\n};\n/**\r\n * Hides / Shows search form based on shouldCollapse search flag\r\n * @param {*} searchFormElm icon element for the mobile search button\r\n * @param {boolean} shouldCollapseSearch if true, the result of this function will be to hide the search form\r\n */\n\n\nvar toggleSearchForm = function toggleSearchForm(searchFormElm, shouldCollapseSearch) {\n  searchFormElm.classList.remove(cssClasses.isVisible);\n  shouldCollapseSearch ? null : searchFormElm.classList.add(cssClasses.isVisible);\n  var gscElement = document.getElementsByClassName(\"gsc-completion-container\");\n\n  if (gscElement[0]) {\n    searchFormElm.classList.contains(cssClasses.isVisible) ? gscElement[0].style.display = \"\" : gscElement[0].style.display = \"none\";\n\n    if (searchFormElm.classList.contains(cssClasses.isVisible)) {\n      var gscElement50 = document.getElementsByClassName(\"gstl_50 gssb_c\");\n\n      if (gscElement50[0]) {\n        gscElement50[0].style.left = \"14px\";\n        gscElement50[0].style.top = \"145px\";\n      }\n    }\n  }\n};\n/**\r\n * Toggle Site Search based on whether the mobile search button is selected or not\r\n */\n\n\nvar toggleSiteSearch = function toggleSiteSearch() {\n  var mobileSearchIcons = document.getElementById(mobileSearchButtonId).querySelectorAll(\"i\");\n\n  if (mobileSearchIcons.length > 0) {\n    var searchIconElm = mobileSearchIcons[0];\n    var searchFormElm = document.getElementById(searchForm);\n    var shouldCollapseSearch = searchIconElm.classList.contains(cssClasses.closeSearchIcon);\n    updateSearchIcon(searchIconElm, shouldCollapseSearch);\n    toggleSearchForm(searchFormElm, shouldCollapseSearch);\n  } else {\n    console.error(\"You are missing a button element with the id: \".concat(mobileSearchButtonId, \".\"));\n  }\n};\n/** Events  */\n\n\nif (document.getElementById(mobileSearchButtonId)) {\n  document.getElementById(mobileSearchButtonId).addEventListener(\"click\", toggleSiteSearch, false);\n}\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/site/SiteSearch.js?");

/***/ }),

/***/ "./src/site/SocialMedia.js":
/*!*********************************!*\
  !*** ./src/site/SocialMedia.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * This handles the twitter social media button event\r\n * Generates an href for the current page\r\n */\nfunction LoadTwitter() {\n  window.twttr = function (d, s, id) {\n    var js,\n        fjs = d.getElementsByTagName(s)[0],\n        t = window.twttr || {};\n    if (d.getElementById(id)) return t;\n    js = d.createElement(s);\n    js.id = id;\n    js.src = \"https://platform.twitter.com/widgets.js\";\n    fjs.parentNode.insertBefore(js, fjs);\n    t._e = [];\n\n    t.ready = function (f) {\n      t._e.push(f);\n    };\n\n    return t;\n  }(document, \"script\", \"twitter-wjs\");\n\n  twttr.ready(function (twttr) {\n    // bind events here\n    var twitterButton = document.getElementById(\"twitterButton\");\n\n    if (twitterButton) {\n      twitterButton.href += \"&url=\" + window.location.href;\n    }\n\n    var facebookButton = document.getElementById(\"facebookButton\");\n\n    if (facebookButton) {\n      facebookButton.href += \"?u=\" + window.location.href;\n    }\n  });\n}\n\nwindow.addEventListener(\"load\", LoadTwitter);\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/site/SocialMedia.js?");

/***/ }),

/***/ "./src/utilities/constants.utilities.js":
/*!**********************************************!*\
  !*** ./src/utilities/constants.utilities.js ***!
  \**********************************************/
/*! exports provided: HtmlAttributes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HtmlAttributes\", function() { return HtmlAttributes; });\nvar HtmlAttributes = {\n  ariaExpanded: \"aria-expanded\"\n};\n\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/utilities/constants.utilities.js?");

/***/ }),

/***/ "./src/utilities/dom.utilities.js":
/*!****************************************!*\
  !*** ./src/utilities/dom.utilities.js ***!
  \****************************************/
/*! exports provided: AddClassToElms, GetFirstElementOrDefault, RemoveClassFromElms, SetAttributeForElms, ToggleClassForElms */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AddClassToElms\", function() { return AddClassToElms; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GetFirstElementOrDefault\", function() { return GetFirstElementOrDefault; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RemoveClassFromElms\", function() { return RemoveClassFromElms; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SetAttributeForElms\", function() { return SetAttributeForElms; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ToggleClassForElms\", function() { return ToggleClassForElms; });\n/**\r\n * Get the first element based on a css selector\r\n * @param {*} elm\r\n * @param {string} querySelector\r\n * @returns HTMLElement or null if the query selector does not match any elements.\r\n */\nvar GetFirstElementOrDefault = function GetFirstElementOrDefault(elm, querySelector) {\n  var elms = elm.querySelectorAll(querySelector);\n  return elms ? elms[0] : null;\n};\n/**\r\n * Set a specific attribute on a group of elements\r\n * @param {NodeList} elms collection of nodes, usually from document.querySelectorAll\r\n * @param {string} attributeName name of the attribute\r\n * @param {*} attributeValue attribute value\r\n */\n\n\nvar SetAttributeForElms = function SetAttributeForElms(elms, attributeName, attributeValue) {\n  elms.forEach(function (elm) {\n    elm.setAttribute(attributeName, attributeValue);\n  });\n};\n/**\r\n * Add Css Classes for a group of elements\r\n * @param {NodeList} elms collection of nodes, usually from document.querySelectorAll\r\n * @param {string} cssClass space separated string of css classes\r\n */\n\n\nvar AddClassToElms = function AddClassToElms(elms, cssClass) {\n  elms.forEach(function (elm) {\n    elm.classList.add(cssClass);\n  });\n};\n/**\r\n * Remove Css Classes for a group of elements\r\n * @param {NodeList} elms collection of nodes, usually from document.querySelectorAll\r\n * @param {string} cssClass space separated string of css classes\r\n */\n\n\nvar RemoveClassFromElms = function RemoveClassFromElms(elms, cssClass) {\n  elms.forEach(function (elm) {\n    elm.classList.remove(cssClass);\n  });\n};\n/**\r\n * Toggle Css Classes for a group of elements\r\n * @param {NodeList} elms collection of nodes, usually from document.querySelectorAll\r\n * @param {string} cssClass space separated string of css classes\r\n */\n\n\nvar ToggleClassForElms = function ToggleClassForElms(elms, cssClass) {\n  elms.forEach(function (elm) {\n    elm.classList.toggle(cssClass);\n  });\n};\n\n\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/utilities/dom.utilities.js?");

/***/ }),

/***/ "./src/utilities/googlesearch.js":
/*!***************************************!*\
  !*** ./src/utilities/googlesearch.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function onTemplateEventsInit($) {\n  var resizeTimer;\n  var windowWidth;\n\n  function $getSearchContainer() {\n    return $(\"#___gcse_0\");\n  }\n\n  function removeBackGround(oElem) {\n    oElem.style.background = \"\";\n  }\n\n  function initGoogleSearch() {\n    (function () {\n      // Dev cx = \"007558505509255245046:qayakxzcib0\"\n      // Prod cx = \"007558505509255245046:qqwcx9uroqk\"\n      var cx = \"007558505509255245046:qqwcx9uroqk\";\n      var gcse = document.createElement(\"script\");\n      gcse.type = \"text/javascript\";\n      gcse.async = true;\n      gcse.src = \"https://cse.google.com/cse.js?cx=\" + cx;\n\n      gcse.onload = function () {\n        var getElmInterval = setInterval(function () {\n          var searchContainer = $getSearchContainer();\n\n          if (searchContainer) {\n            // Remove Google styles\n            searchContainer.find(\"[class]\").removeAttr(\"class\"); // Replace search button contents\n\n            var searchButton = searchContainer.find(\"button\");\n\n            if (searchButton) {\n              searchButton.empty();\n              searchButton.addClass(\"dg_search-btn\");\n              searchButton.append('<i class=\"fas fa-search\" aria-hidden=\"true\"></i>');\n            }\n\n            var clearButton = searchContainer.find(\"[title='clear results']\");\n\n            if (clearButton) {\n              clearButton.parent().remove();\n            }\n\n            $(\"#gs_st50\").parent().remove(); // Add DG styles\n\n            var searchForm = searchContainer.find(\"form\");\n\n            if (searchForm && searchForm[0]) {\n              searchForm[0].classList.add(\"dg_search-container\");\n              var outerTable = searchForm.children();\n\n              if (outerTable) {\n                outerTable.attr(\"style\", \"width:100%\");\n              }\n            }\n\n            var searchInput = searchContainer.find(\"input\");\n\n            if (searchInput && searchInput[0]) {\n              clearInterval(getElmInterval);\n              searchInput[0].removeAttribute(\"style\");\n              searchInput[0].style.background = removeBackGround(searchInput[0]);\n              searchInput[0].classList.add(\"dg_search-input\");\n              searchInput[0].placeholder = \"Search for agencies, services and more...\";\n            }\n          }\n        }, 100);\n      };\n\n      var s = document.getElementsByTagName(\"script\")[0];\n      s.parentNode.insertBefore(gcse, s);\n    })();\n  }\n\n  function isMobile(width) {\n    var mediaWidth = 990;\n    var scrollBar = 15;\n    return width < mediaWidth - scrollBar;\n  }\n\n  function onPageRating() {\n    // eslint-disable-line consistent-return\n    var urlElm = document.getElementById(\"url\");\n\n    if (urlElm) {\n      urlElm.value = window.location.href;\n    }\n\n    if ($(\"input#website\").val().length) {\n      return false;\n    }\n  }\n\n  function onSearchReady() {\n    windowWidth = $(window).width();\n\n    if (isMobile(windowWidth)) {\n      repositionSearchBox(windowWidth);\n    }\n\n    var hasDialog = document.getElementsByClassName(\"dialog-backdrop active\");\n\n    if (windowWidth <= 900) {\n      fakeSiteButtonShowHide(hasDialog, \"0\");\n    } else {\n      fakeSiteButtonShowHide(hasDialog, \"2147483647\");\n    }\n\n    document.addEventListener(\"blur\", function (e) {\n      var searchbarElements = document.getElementsByClassName(\"dg_search-input\");\n      var searchbar = searchbarElements.length > 0 ? searchbarElements[0] : null;\n      var gscElement = document.getElementsByClassName(\"gsc-completion-container\");\n\n      if (gscElement[0]) {\n        gscElementShowHide(gscElement[0], \"none\");\n      }\n\n      if (e.target == searchbar) {\n        e.stopPropagation();\n      }\n    }, true);\n  }\n\n  function onWindowResize() {\n    var $window = $(window);\n    var newWindowWidth = $window.width();\n    var gscElement = document.getElementsByClassName(\"gsc-completion-container\");\n    var hasDialog = document.getElementsByClassName(\"dialog-backdrop active\");\n\n    if (newWindowWidth <= 900) {\n      gscElementShowHide(gscElement, \"none\");\n      fakeSiteButtonShowHide(hasDialog, \"0\");\n    } else {\n      gscElementShowHide(gscElement, \"\");\n      fakeSiteButtonShowHide(hasDialog, \"2147483647\");\n    }\n\n    clearTimeout(resizeTimer);\n    resizeTimer = setTimeout(function waitForResizeToFinish() {\n      if (newWindowWidth !== windowWidth) {\n        repositionSearchBox(newWindowWidth);\n        windowWidth = newWindowWidth;\n      }\n    }, 100);\n  }\n\n  function repositionSearchBox(currentWindowWidth) {\n    var $targetContainer = $getSearchContainer();\n    var intervalCheck = setInterval(function () {\n      if ($getSearchContainer.length && $(\".gsc-control-searchbox-only\").length) {\n        clearInterval(intervalCheck);\n        var searchFormHtml = $(\".gsc-control-searchbox-only\").closest(\"div\").detach();\n        $targetContainer.append(searchFormHtml);\n      }\n    }, 100);\n  }\n\n  var gscElementShowHide = function gscElementShowHide(gscElement, displayValue) {\n    if (gscElement) {\n      for (var i = 0; i < gscElement.length; i += 1) {\n        gscElement[i].style.display = displayValue;\n      }\n    }\n  };\n\n  var fakeSiteButtonShowHide = function fakeSiteButtonShowHide(hasDialog, displayValue) {\n    var fakeSiteButton = document.getElementById(\"bc_site-nav__toggle-button\");\n\n    if (hasDialog.length > 0) {\n      fakeSiteButton.style.zIndex = displayValue;\n    }\n  };\n\n  var handleClick = function handleClick(clickEvent) {\n    var compareElement = $.trim(clickEvent.target.classList);\n    var gscElement = document.getElementsByClassName(\"gsc-completion-container\");\n\n    if (compareElement == \"no-cssgridlegacy cssgrid\" || compareElement == \"dg_search-container\") {\n      gscElementShowHide(gscElement, \"none\");\n      document.getElementById(\"gsc-i-id1\").value = \"\";\n      return;\n    } else if (compareElement == \"dg_search-input\") {\n      gscElementShowHide(gscElement, \"\");\n      return;\n    } else {\n      var flyoutElement = document.getElementById(\"div-search-form\");\n\n      if (flyoutElement) {\n        var targetElement = clickEvent.target; // clicked element\n\n        do {\n          if (targetElement == flyoutElement) {\n            gscElementShowHide(gscElement, \"none\");\n            document.getElementById(\"gsc-i-id1\").value = \"\";\n            return;\n          } // Go up the DOM\n\n\n          targetElement = targetElement.parentNode;\n        } while (targetElement);\n\n        if (targetElement == null) {\n          return;\n        } else {\n          gscElementShowHide(gscElement, \"none\");\n          document.getElementById(\"gsc-i-id1\").value = \"\";\n        }\n      }\n    }\n  };\n\n  initGoogleSearch();\n  $(document).ready(onSearchReady);\n  /* Submit url to rate form */\n\n  $(document).on(\"submit\", \"#RateThisPageForm\", onPageRating);\n  $(window).on(\"resize\", onWindowResize);\n  document.addEventListener(\"click\", handleClick, false);\n})(jQuery);\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/utilities/googlesearch.js?");

/***/ }),

/***/ "./src/utilities/hideParksAbout.js":
/*!*****************************************!*\
  !*** ./src/utilities/hideParksAbout.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function hideAbout() {\n  var parksAboutContent = document.getElementById(\"dg_parks_about_content\");\n  var parksAboutHeader = document.getElementById(\"dg_parks_about_header\");\n\n  if (parksAboutContent) {\n    if (parksAboutContent.children.length < 1) {\n      parksAboutHeader.style.display = \"none\";\n    }\n  }\n}\n\nwindow.addEventListener(\"DOMContentLoaded\", hideAbout());\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/utilities/hideParksAbout.js?");

/***/ }),

/***/ "./src/utilities/hideShowButton.js":
/*!*****************************************!*\
  !*** ./src/utilities/hideShowButton.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function hideButton() {\n  var ua = window.navigator.userAgent;\n  var msie = ua.indexOf(\"MSIE \");\n\n  if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./)) {\n    // If Internet Explorer, hide button\n    var showMoreLessButton = document.getElementById(\"toggle-btn\");\n    showMoreLessButton ? showMoreLessButton.style.display = \"none\" : null;\n  }\n}\n\nwindow.addEventListener(\"DOMContentLoaded\", hideButton());\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/utilities/hideShowButton.js?");

/***/ }),

/***/ "./src/utilities/w3-utilities.js":
/*!***************************************!*\
  !*** ./src/utilities/w3-utilities.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * @namespace aria\r\n */\nvar aria = aria || {};\n/**\r\n * @desc\r\n *  Key code constants\r\n */\n\naria.KeyCode = {\n  BACKSPACE: 8,\n  TAB: 9,\n  RETURN: 13,\n  ESC: 27,\n  SPACE: 32,\n  PAGE_UP: 33,\n  PAGE_DOWN: 34,\n  END: 35,\n  HOME: 36,\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n  DELETE: 46\n};\naria.Utils = aria.Utils || {}; // Polyfill src https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\n\naria.Utils.matches = function (element, selector) {\n  if (!Element.prototype.matches) {\n    Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n      var matches = element.parentNode.querySelectorAll(s);\n      var i = matches.length;\n\n      while (--i >= 0 && matches.item(i) !== this) {}\n\n      return i > -1;\n    };\n  }\n\n  return element.matches(selector);\n};\n\naria.Utils.remove = function (item) {\n  if (item.remove && typeof item.remove === \"function\") {\n    return item.remove();\n  }\n\n  if (item.parentNode && item.parentNode.removeChild && typeof item.parentNode.removeChild === \"function\") {\n    return item.parentNode.removeChild(item);\n  }\n\n  return false;\n};\n\naria.Utils.isFocusable = function (element) {\n  if (element.tabIndex > 0 || element.tabIndex === 0 && element.getAttribute(\"tabIndex\") !== null) {\n    return true;\n  }\n\n  if (element.disabled) {\n    return false;\n  }\n\n  switch (element.nodeName) {\n    case \"A\":\n      return !!element.href && element.rel != \"ignore\";\n\n    case \"INPUT\":\n      return element.type != \"hidden\" && element.type != \"file\";\n\n    case \"BUTTON\":\n    case \"SELECT\":\n    case \"TEXTAREA\":\n      return true;\n\n    default:\n      return false;\n  }\n};\n\naria.Utils.getAncestorBySelector = function (element, selector) {\n  if (!aria.Utils.matches(element, selector + \" \" + element.tagName)) {\n    // Element is not inside an element that matches selector\n    return null;\n  } // Move up the DOM tree until a parent matching the selector is found\n\n\n  var currentNode = element;\n  var ancestor = null;\n\n  while (ancestor === null) {\n    if (aria.Utils.matches(currentNode.parentNode, selector)) {\n      ancestor = currentNode.parentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return ancestor;\n};\n\naria.Utils.hasClass = function (element, className) {\n  return new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\").test(element.className);\n};\n\naria.Utils.addClass = function (element, className) {\n  if (!aria.Utils.hasClass(element, className)) {\n    element.className += \" \" + className;\n  }\n};\n\naria.Utils.removeClass = function (element, className) {\n  var classRegex = new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\");\n  element.className = element.className.replace(classRegex, \" \").trim();\n};\n\naria.Utils.bindMethods = function (object\n/* , ...methodNames */\n) {\n  var methodNames = Array.prototype.slice.call(arguments, 1);\n  methodNames.forEach(function (method) {\n    object[method] = object[method].bind(object);\n  });\n};\n\n//# sourceURL=webpack://Bc%5Bname%5D/./src/utilities/w3-utilities.js?");

/***/ })

/******/ });